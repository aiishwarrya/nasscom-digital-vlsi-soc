
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: ./designs/picorv32a/src/picorv32a.v
Parsing SystemVerilog input from `./designs/picorv32a/src/picorv32a.v' to AST representation.
Generating RTLIL representation for module `\picorv32a'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openLANE_flow/designs/picorv32a/runs/16-01_08-54/tmp/synthesis/hierarchy.dot'.
Dumping module picorv32a to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul

3.2. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_mul'.
Removing unused module `\picorv32_regs'.
Removed 6 unused modules.

4. Executing TRIBUF pass.

5. Executing SYNTH pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul

5.1.2. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul
Removed 0 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:0$680'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:0$680'.
Found and cleaned up 16 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$484'.
Found and cleaned up 6 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:529$126'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:529$126'.
Cleaned up 24 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:2306$783 in module picorv32_pcpi_fast_mul.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:2276$776 in module picorv32_pcpi_fast_mul.
Marked 36 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1374$499 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1287$466 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1273$461 in module picorv32a.
Marked 8 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1164$426 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:839$166 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:790$164 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:759$160 in module picorv32a.
Marked 47 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:683$159 in module picorv32a.
Marked 4 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:548$135 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:413$97 in module picorv32a.
Removed 2 dead cases from process $proc$./designs/picorv32a/src/picorv32a.v:384$94 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:384$94 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:373$89 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:308$15 in module picorv32a.
Removed a total of 2 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 5 redundant assignments.
Promoted 61 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

5.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
     1/4: $0\active[3:0] [3:1]
     2/4: $0\active[3:0] [0]
     3/4: $0\rs2[32:0]
     4/4: $0\rs1[32:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
     1/4: $0\rd_q[63:0]
     2/4: $0\rs2_q[32:0]
     3/4: $0\rs1_q[32:0]
     4/4: $0\rd[63:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
     1/8: $2\instr_mul[0:0]
     2/8: $2\instr_mulhu[0:0]
     3/8: $2\instr_mulhsu[0:0]
     4/8: $2\instr_mulh[0:0]
     5/8: $1\instr_mulhu[0:0]
     6/8: $1\instr_mulhsu[0:0]
     7/8: $1\instr_mulh[0:0]
     8/8: $1\instr_mul[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
     1/79: $17\next_irq_pending[2:2]
     2/79: $16\next_irq_pending[2:2]
     3/79: $15\next_irq_pending[2:2]
     4/79: $14\next_irq_pending[2:2]
     5/79: $13\next_irq_pending[2:2]
     6/79: $12\next_irq_pending[2:2]
     7/79: $11\next_irq_pending[2:2]
     8/79: $5\next_irq_pending[31:0] [31:2]
     9/79: $3\set_mem_do_rdata[0:0]
    10/79: $5\next_irq_pending[31:0] [1]
    11/79: $3\set_mem_do_wdata[0:0]
    12/79: $5\next_irq_pending[31:0] [0]
    13/79: $4\set_mem_do_rinst[0:0]
    14/79: $3\set_mem_do_rinst[0:0]
    15/79: $4\set_mem_do_wdata[0:0]
    16/79: $9\next_irq_pending[1:1]
    17/79: $8\next_irq_pending[1:1]
    18/79: $7\next_irq_pending[1:1]
    19/79: $4\set_mem_do_rdata[0:0]
    20/79: $5\set_mem_do_rinst[0:0]
    21/79: $10\next_irq_pending[1:1]
    22/79: $6\next_irq_pending[31:0]
    23/79: $3\current_pc[31:0]
    24/79: $2\current_pc[31:0]
    25/79: $2\set_mem_do_wdata[0:0]
    26/79: $2\set_mem_do_rdata[0:0]
    27/79: $2\set_mem_do_rinst[0:0]
    28/79: $4\next_irq_pending[31:0]
    29/79: $1\current_pc[31:0]
    30/79: $1\set_mem_do_wdata[0:0]
    31/79: $1\set_mem_do_rdata[0:0]
    32/79: $1\set_mem_do_rinst[0:0]
    33/79: $0\trace_data[35:0]
    34/79: $3\next_irq_pending[31:0]
    35/79: $2\next_irq_pending[0:0]
    36/79: $1\next_irq_pending[0:0]
    37/79: $0\count_cycle[63:0]
    38/79: $0\pcpi_timeout[0:0]
    39/79: $0\trace_valid[0:0]
    40/79: $0\do_waitirq[0:0]
    41/79: $0\decoder_pseudo_trigger[0:0]
    42/79: $0\decoder_trigger[0:0]
    43/79: $0\alu_wait_2[0:0]
    44/79: $0\alu_wait[0:0]
    45/79: $0\reg_out[31:0]
    46/79: $0\reg_sh[4:0]
    47/79: $0\trap[0:0]
    48/79: $0\pcpi_timeout_counter[3:0]
    49/79: $0\latched_rd[4:0]
    50/79: $0\latched_is_lb[0:0]
    51/79: $0\latched_is_lh[0:0]
    52/79: $0\latched_is_lu[0:0]
    53/79: $0\latched_trace[0:0]
    54/79: $0\latched_compr[0:0]
    55/79: $0\latched_branch[0:0]
    56/79: $0\latched_stalu[0:0]
    57/79: $0\latched_store[0:0]
    58/79: $0\irq_state[1:0]
    59/79: $0\cpu_state[7:0]
    60/79: $0\dbg_rs2val_valid[0:0]
    61/79: $0\dbg_rs1val_valid[0:0]
    62/79: $0\dbg_rs2val[31:0]
    63/79: $0\dbg_rs1val[31:0]
    64/79: $0\mem_do_wdata[0:0]
    65/79: $0\mem_do_rdata[0:0]
    66/79: $0\mem_do_rinst[0:0]
    67/79: $0\mem_do_prefetch[0:0]
    68/79: $0\mem_wordsize[1:0]
    69/79: $0\timer[31:0]
    70/79: $0\irq_mask[31:0]
    71/79: $0\irq_active[0:0]
    72/79: $0\irq_delay[0:0]
    73/79: $0\reg_op2[31:0]
    74/79: $0\reg_op1[31:0]
    75/79: $0\reg_next_pc[31:0]
    76/79: $0\reg_pc[31:0]
    77/79: $0\count_instr[63:0]
    78/79: $0\eoi[31:0]
    79/79: $0\pcpi_valid[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$484'.
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$478'.
     1/3: $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481
     2/3: $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_DATA[31:0]$480
     3/3: $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_ADDR[4:0]$479
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$466'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$461'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1271$460'.
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$438'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$426'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_uj[31:0] [10]
     3/76: $0\decoded_imm_uj[31:0] [7]
     4/76: $0\decoded_imm_uj[31:0] [6]
     5/76: $0\decoded_imm_uj[31:0] [3:1]
     6/76: $0\decoded_imm_uj[31:0] [5]
     7/76: $0\decoded_imm_uj[31:0] [9:8]
     8/76: $0\decoded_imm_uj[31:0] [31:20]
     9/76: $0\decoded_imm_uj[31:0] [4]
    10/76: $0\decoded_imm_uj[31:0] [11]
    11/76: $0\decoded_imm_uj[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_uj[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$159'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$97'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$94'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$89'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]

5.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mul' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulh' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulhsu' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulhu' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
No latch inferred for signal `\picorv32a.\cpuregs_rs1' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$484'.
No latch inferred for signal `\picorv32a.\cpuregs_rs2' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$484'.
No latch inferred for signal `\picorv32a.\decoded_rs' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$484'.
No latch inferred for signal `\picorv32a.\cpuregs_write' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$466'.
No latch inferred for signal `\picorv32a.\cpuregs_wrdata' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$466'.
No latch inferred for signal `\picorv32a.\clear_prefetched_high_word' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$461'.
No latch inferred for signal `\picorv32a.\alu_out' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$438'.
No latch inferred for signal `\picorv32a.\alu_out_0' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$438'.
No latch inferred for signal `\picorv32a.\dbg_ascii_state' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$426'.
No latch inferred for signal `\picorv32a.\dbg_insn_opcode' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
No latch inferred for signal `\picorv32a.\dbg_ascii_instr' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
No latch inferred for signal `\picorv32a.\dbg_insn_imm' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
No latch inferred for signal `\picorv32a.\dbg_insn_rs1' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
No latch inferred for signal `\picorv32a.\dbg_insn_rs2' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
No latch inferred for signal `\picorv32a.\dbg_insn_rd' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
No latch inferred for signal `\picorv32a.\new_ascii_instr' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$159'.
No latch inferred for signal `\picorv32a.\mem_la_wdata' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$94'.
No latch inferred for signal `\picorv32a.\mem_la_wstrb' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$94'.
No latch inferred for signal `\picorv32a.\mem_rdata_word' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$94'.
No latch inferred for signal `\picorv32a.\pcpi_int_wr' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.
No latch inferred for signal `\picorv32a.\pcpi_int_rd' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.
No latch inferred for signal `\picorv32a.\pcpi_int_wait' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.
No latch inferred for signal `\picorv32a.\pcpi_int_ready' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.

5.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\picorv32_pcpi_fast_mul.\rs1' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
  created $dff cell `$procdff$3479' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs2' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
  created $dff cell `$procdff$3480' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\shift_out' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
  created $dff cell `$procdff$3481' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\active' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
  created $dff cell `$procdff$3482' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rd' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
  created $dff cell `$procdff$3483' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs1_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
  created $dff cell `$procdff$3484' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs2_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
  created $dff cell `$procdff$3485' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rd_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
  created $dff cell `$procdff$3486' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\pcpi_insn_valid_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
  created $dff cell `$procdff$3487' with positive edge clock.
Creating register for signal `\picorv32a.\trap' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3488' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3489' with positive edge clock.
Creating register for signal `\picorv32a.\eoi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3490' with positive edge clock.
Creating register for signal `\picorv32a.\trace_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3491' with positive edge clock.
Creating register for signal `\picorv32a.\trace_data' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3492' with positive edge clock.
Creating register for signal `\picorv32a.\count_cycle' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3493' with positive edge clock.
Creating register for signal `\picorv32a.\count_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3494' with positive edge clock.
Creating register for signal `\picorv32a.\reg_pc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3495' with positive edge clock.
Creating register for signal `\picorv32a.\reg_next_pc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3496' with positive edge clock.
Creating register for signal `\picorv32a.\reg_op1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3497' with positive edge clock.
Creating register for signal `\picorv32a.\reg_op2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3498' with positive edge clock.
Creating register for signal `\picorv32a.\reg_out' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3499' with positive edge clock.
Creating register for signal `\picorv32a.\reg_sh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3500' with positive edge clock.
Creating register for signal `\picorv32a.\irq_delay' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3501' with positive edge clock.
Creating register for signal `\picorv32a.\irq_active' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3502' with positive edge clock.
Creating register for signal `\picorv32a.\irq_mask' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3503' with positive edge clock.
Creating register for signal `\picorv32a.\irq_pending' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3504' with positive edge clock.
Creating register for signal `\picorv32a.\timer' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3505' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wordsize' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3506' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_prefetch' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3507' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_rinst' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3508' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_rdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3509' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_wdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3510' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_trigger' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3511' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_trigger_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3512' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_pseudo_trigger' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3513' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_pseudo_trigger_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3514' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs1val' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3515' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs2val' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3516' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs1val_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3517' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs2val_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3518' with positive edge clock.
Creating register for signal `\picorv32a.\cpu_state' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3519' with positive edge clock.
Creating register for signal `\picorv32a.\irq_state' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3520' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_rinst' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3521' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_rdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3522' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_wdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3523' with positive edge clock.
Creating register for signal `\picorv32a.\latched_store' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3524' with positive edge clock.
Creating register for signal `\picorv32a.\latched_stalu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3525' with positive edge clock.
Creating register for signal `\picorv32a.\latched_branch' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3526' with positive edge clock.
Creating register for signal `\picorv32a.\latched_compr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3527' with positive edge clock.
Creating register for signal `\picorv32a.\latched_trace' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3528' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3529' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3530' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3531' with positive edge clock.
Creating register for signal `\picorv32a.\latched_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3532' with positive edge clock.
Creating register for signal `\picorv32a.\current_pc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3533' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_timeout_counter' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3534' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_timeout' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3535' with positive edge clock.
Creating register for signal `\picorv32a.\next_irq_pending' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3536' with positive edge clock.
Creating register for signal `\picorv32a.\do_waitirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3537' with positive edge clock.
Creating register for signal `\picorv32a.\alu_out_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3538' with positive edge clock.
Creating register for signal `\picorv32a.\alu_out_0_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3539' with positive edge clock.
Creating register for signal `\picorv32a.\alu_wait' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3540' with positive edge clock.
Creating register for signal `\picorv32a.\alu_wait_2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
  created $dff cell `$procdff$3541' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_ADDR' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$478'.
  created $dff cell `$procdff$3542' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_DATA' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$478'.
  created $dff cell `$procdff$3543' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$478'.
  created $dff cell `$procdff$3544' with positive edge clock.
Creating register for signal `\picorv32a.\clear_prefetched_high_word_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1271$460'.
  created $dff cell `$procdff$3545' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_insn' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3546' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lui' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3547' with positive edge clock.
Creating register for signal `\picorv32a.\instr_auipc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3548' with positive edge clock.
Creating register for signal `\picorv32a.\instr_jal' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3549' with positive edge clock.
Creating register for signal `\picorv32a.\instr_jalr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3550' with positive edge clock.
Creating register for signal `\picorv32a.\instr_beq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3551' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bne' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3552' with positive edge clock.
Creating register for signal `\picorv32a.\instr_blt' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3553' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bge' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3554' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3555' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bgeu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3556' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3557' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3558' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3559' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lbu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3560' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lhu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3561' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3562' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3563' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3564' with positive edge clock.
Creating register for signal `\picorv32a.\instr_addi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3565' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slti' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3566' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sltiu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3567' with positive edge clock.
Creating register for signal `\picorv32a.\instr_xori' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3568' with positive edge clock.
Creating register for signal `\picorv32a.\instr_ori' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3569' with positive edge clock.
Creating register for signal `\picorv32a.\instr_andi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3570' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slli' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3571' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srli' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3572' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srai' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3573' with positive edge clock.
Creating register for signal `\picorv32a.\instr_add' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3574' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sub' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3575' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sll' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3576' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slt' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3577' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3578' with positive edge clock.
Creating register for signal `\picorv32a.\instr_xor' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3579' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srl' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3580' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sra' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3581' with positive edge clock.
Creating register for signal `\picorv32a.\instr_or' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3582' with positive edge clock.
Creating register for signal `\picorv32a.\instr_and' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3583' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdcycle' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3584' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdcycleh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3585' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdinstr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3586' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdinstrh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3587' with positive edge clock.
Creating register for signal `\picorv32a.\instr_ecall_ebreak' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3588' with positive edge clock.
Creating register for signal `\picorv32a.\instr_getq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3589' with positive edge clock.
Creating register for signal `\picorv32a.\instr_setq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3590' with positive edge clock.
Creating register for signal `\picorv32a.\instr_retirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3591' with positive edge clock.
Creating register for signal `\picorv32a.\instr_maskirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3592' with positive edge clock.
Creating register for signal `\picorv32a.\instr_waitirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3593' with positive edge clock.
Creating register for signal `\picorv32a.\instr_timer' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3594' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3595' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rs1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3596' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rs2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3597' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3598' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_imm_uj' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3599' with positive edge clock.
Creating register for signal `\picorv32a.\compressed_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3600' with positive edge clock.
Creating register for signal `\picorv32a.\is_lui_auipc_jal' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3601' with positive edge clock.
Creating register for signal `\picorv32a.\is_lb_lh_lw_lbu_lhu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3602' with positive edge clock.
Creating register for signal `\picorv32a.\is_slli_srli_srai' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3603' with positive edge clock.
Creating register for signal `\picorv32a.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3604' with positive edge clock.
Creating register for signal `\picorv32a.\is_sb_sh_sw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3605' with positive edge clock.
Creating register for signal `\picorv32a.\is_sll_srl_sra' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3606' with positive edge clock.
Creating register for signal `\picorv32a.\is_lui_auipc_jal_jalr_addi_add_sub' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3607' with positive edge clock.
Creating register for signal `\picorv32a.\is_slti_blt_slt' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3608' with positive edge clock.
Creating register for signal `\picorv32a.\is_sltiu_bltu_sltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3609' with positive edge clock.
Creating register for signal `\picorv32a.\is_beq_bne_blt_bge_bltu_bgeu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3610' with positive edge clock.
Creating register for signal `\picorv32a.\is_lbu_lhu_lw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3611' with positive edge clock.
Creating register for signal `\picorv32a.\is_alu_reg_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3612' with positive edge clock.
Creating register for signal `\picorv32a.\is_alu_reg_reg' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3613' with positive edge clock.
Creating register for signal `\picorv32a.\is_compare' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
  created $dff cell `$procdff$3614' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_insn_addr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3615' with positive edge clock.
Creating register for signal `\picorv32a.\q_ascii_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3616' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3617' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_opcode' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3618' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rs1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3619' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rs2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3620' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3621' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_next' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3622' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_valid_insn' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3623' with positive edge clock.
Creating register for signal `\picorv32a.\cached_ascii_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3624' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3625' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_opcode' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3626' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rs1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3627' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rs2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3628' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
  created $dff cell `$procdff$3629' with positive edge clock.
Creating register for signal `\picorv32a.\mem_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3630' with positive edge clock.
Creating register for signal `\picorv32a.\mem_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3631' with positive edge clock.
Creating register for signal `\picorv32a.\mem_addr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3632' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3633' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wstrb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3634' with positive edge clock.
Creating register for signal `\picorv32a.\mem_state' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3635' with positive edge clock.
Creating register for signal `\picorv32a.\mem_la_secondword' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3636' with positive edge clock.
Creating register for signal `\picorv32a.\prefetched_high_word' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3637' with positive edge clock.
Creating register for signal `\picorv32a.\mem_16bit_buffer' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
  created $dff cell `$procdff$3638' with positive edge clock.
Creating register for signal `\picorv32a.\alu_add_sub' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
  created $dff cell `$procdff$3639' with positive edge clock.
Creating register for signal `\picorv32a.\alu_shl' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
  created $dff cell `$procdff$3640' with positive edge clock.
Creating register for signal `\picorv32a.\alu_shr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
  created $dff cell `$procdff$3641' with positive edge clock.
Creating register for signal `\picorv32a.\alu_eq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
  created $dff cell `$procdff$3642' with positive edge clock.
Creating register for signal `\picorv32a.\alu_ltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
  created $dff cell `$procdff$3643' with positive edge clock.
Creating register for signal `\picorv32a.\alu_lts' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
  created $dff cell `$procdff$3644' with positive edge clock.
Creating register for signal `\picorv32a.\next_insn_opcode' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$97'.
  created $dff cell `$procdff$3645' with positive edge clock.
Creating register for signal `\picorv32a.\mem_rdata_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$97'.
  created $dff cell `$procdff$3646' with positive edge clock.
Creating register for signal `\picorv32a.\mem_la_firstword_reg' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$89'.
  created $dff cell `$procdff$3647' with positive edge clock.
Creating register for signal `\picorv32a.\last_mem_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$89'.
  created $dff cell `$procdff$3648' with positive edge clock.

5.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$783'.
Found and cleaned up 3 empty switches in `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$778'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$776'.
Found and cleaned up 55 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$499'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$484'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$478'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$478'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$466'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$466'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$461'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$461'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1271$460'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$438'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$438'.
Found and cleaned up 8 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$426'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$426'.
Found and cleaned up 22 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$166'.
Found and cleaned up 3 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$164'.
Found and cleaned up 5 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$160'.
Found and cleaned up 47 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$159'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$159'.
Found and cleaned up 16 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$135'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$668'.
Found and cleaned up 19 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$97'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$97'.
Found and cleaned up 3 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$94'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$94'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$89'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$89'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$15'.
Cleaned up 197 empty switches.

5.3. Executing FLATTEN pass (flatten design).
Deleting now unused module picorv32_pcpi_fast_mul.
<suppressed ~1 debug messages>

5.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~531 debug messages>

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 623 unused cells and 1932 unused wires.
<suppressed ~679 debug messages>

5.6. Executing CHECK pass (checking for obvious problems).
checking module picorv32a..
found and reported 0 problems.

5.7. Executing OPT pass (performing simple optimizations).

5.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~744 debug messages>
Removed a total of 248 cells.

5.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$3476: { \pcpi_mul.active [1] 1'0 } -> 2'00
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1008.
    dead port 2/2 on $mux $procmux$1015.
    dead port 2/2 on $mux $procmux$1018.
    dead port 2/2 on $mux $procmux$1031.
    dead port 1/2 on $mux $procmux$1041.
    dead port 2/2 on $mux $procmux$1043.
    dead port 2/2 on $mux $procmux$1046.
    dead port 2/2 on $mux $procmux$1055.
    dead port 2/2 on $mux $procmux$1058.
    dead port 2/2 on $mux $procmux$1066.
    dead port 2/2 on $mux $procmux$1068.
    dead port 2/2 on $mux $procmux$1071.
    dead port 1/2 on $mux $procmux$1085.
    dead port 2/2 on $mux $procmux$1087.
    dead port 2/2 on $mux $procmux$1089.
    dead port 2/2 on $mux $procmux$1092.
    dead port 2/2 on $mux $procmux$1105.
    dead port 2/2 on $mux $procmux$1107.
    dead port 2/2 on $mux $procmux$1110.
    dead port 2/2 on $mux $procmux$1122.
    dead port 2/2 on $mux $procmux$1125.
    dead port 2/2 on $mux $procmux$1132.
    dead port 2/2 on $mux $procmux$1134.
    dead port 2/2 on $mux $procmux$1137.
    dead port 2/2 on $mux $procmux$1147.
    dead port 1/2 on $mux $procmux$1150.
    dead port 2/2 on $mux $procmux$1152.
    dead port 2/2 on $mux $procmux$1155.
    dead port 2/2 on $mux $procmux$1169.
    dead port 1/2 on $mux $procmux$1172.
    dead port 2/2 on $mux $procmux$1174.
    dead port 2/2 on $mux $procmux$1176.
    dead port 2/2 on $mux $procmux$1179.
    dead port 2/2 on $mux $procmux$1191.
    dead port 2/2 on $mux $procmux$1194.
    dead port 2/2 on $mux $procmux$1237.
    dead port 2/2 on $mux $procmux$1250.
    dead port 2/2 on $mux $procmux$1263.
    dead port 2/2 on $mux $procmux$1303.
    dead port 1/4 on $pmux $procmux$1401.
    dead port 1/4 on $pmux $procmux$1423.
    dead port 2/2 on $mux $flatten\pcpi_mul.$procmux$898.
    dead port 2/2 on $mux $flatten\pcpi_mul.$procmux$904.
    dead port 2/2 on $mux $flatten\pcpi_mul.$procmux$911.
    dead port 2/2 on $mux $flatten\pcpi_mul.$procmux$919.
    dead port 1/4 on $pmux $procmux$1768.
    dead port 2/11 on $pmux $procmux$1783.
    dead port 1/4 on $pmux $procmux$1931.
    dead port 2/2 on $mux $procmux$2283.
    dead port 2/2 on $mux $procmux$2292.
    dead port 2/2 on $mux $procmux$3438.
    dead port 2/2 on $mux $procmux$3445.
    dead port 1/4 on $pmux $procmux$3471.
    dead port 3/4 on $pmux $procmux$3471.
    dead port 4/4 on $pmux $procmux$3471.
    dead port 1/3 on $pmux $procmux$3476.
    dead port 3/3 on $pmux $procmux$3476.
    dead port 2/2 on $mux $procmux$937.
    dead port 2/2 on $mux $procmux$947.
    dead port 2/2 on $mux $procmux$949.
    dead port 2/2 on $mux $procmux$955.
    dead port 2/2 on $mux $procmux$962.
    dead port 2/2 on $mux $procmux$964.
    dead port 2/2 on $mux $procmux$970.
    dead port 2/2 on $mux $procmux$986.
    dead port 2/2 on $mux $procmux$992.
    dead port 2/2 on $mux $procmux$995.
Removed 67 multiplexer ports.
<suppressed ~168 debug messages>

5.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1021: { $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y $auto$opt_reduce.cc:134:opt_mux$3650 }
    New ctrl vector for $pmux cell $procmux$1227: { $procmux$1000_CMP $auto$opt_reduce.cc:134:opt_mux$3652 }
    New ctrl vector for $pmux cell $procmux$1240: { $auto$opt_reduce.cc:134:opt_mux$3654 $procmux$1022_CMP }
    New ctrl vector for $pmux cell $procmux$1253: { $procmux$1002_CMP $auto$opt_reduce.cc:134:opt_mux$3656 }
    New ctrl vector for $pmux cell $procmux$1401: { }
    New ctrl vector for $mux cell $procmux$1405: { }
    New ctrl vector for $mux cell $procmux$1408: { }
    New ctrl vector for $pmux cell $procmux$1423: $auto$opt_reduce.cc:134:opt_mux$3658
    New ctrl vector for $pmux cell $procmux$1429: $auto$opt_reduce.cc:134:opt_mux$3660
    New ctrl vector for $pmux cell $procmux$1466: { \is_rdcycle_rdcycleh_rdinstr_rdinstrh $auto$opt_reduce.cc:134:opt_mux$3662 \instr_retirq \instr_maskirq \instr_timer }
    New ctrl vector for $pmux cell $procmux$1501: { $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y $procmux$1001_CMP }
    New ctrl vector for $pmux cell $procmux$1681: { $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y $procmux$1004_CMP $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y $procmux$1002_CMP $auto$opt_reduce.cc:134:opt_mux$3664 }
    New ctrl vector for $pmux cell $procmux$1704: $auto$opt_reduce.cc:134:opt_mux$3666
    New ctrl vector for $pmux cell $procmux$1783: { $auto$opt_reduce.cc:134:opt_mux$3670 $logic_and$./designs/picorv32a/src/picorv32a.v:1674$582_Y $auto$opt_reduce.cc:134:opt_mux$3668 }
    New ctrl vector for $pmux cell $procmux$2156: { \is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_mux$3672 }
    Consolidated identical input bits for $mux cell $procmux$2270:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481
      New ports: A=1'0, B=1'1, Y=$0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0]
      New connections: $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [31:1] = { $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN[31:0]$481 [0] }
    New ctrl vector for $pmux cell $procmux$2278: $auto$opt_reduce.cc:134:opt_mux$3674
    New ctrl vector for $pmux cell $procmux$976: { $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y $auto$opt_reduce.cc:134:opt_mux$3676 }
    New ctrl vector for $pmux cell $procmux$998: { $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y $auto$opt_reduce.cc:134:opt_mux$3678 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3659: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3665: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3667: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3669: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3671: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
  Optimizing cells in module \picorv32a.
Performed a total of 24 changes.

5.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

5.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 1 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 2 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 3 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 4 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 5 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 6 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 7 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 8 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 9 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 10 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 11 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 12 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 13 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 14 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 15 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 16 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 17 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 18 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 19 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 20 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 21 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 22 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 23 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 24 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 25 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 26 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 27 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 28 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 29 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 30 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 31 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 32 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 33 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 34 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 1-bit at position 35 on $procdff$3492 ($dff) from module picorv32a.
Setting constant 0-bit at position 0 on $procdff$3491 ($dff) from module picorv32a.

5.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 323 unused wires.
<suppressed ~1 debug messages>

5.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~4 debug messages>

5.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

5.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1354: $auto$opt_reduce.cc:134:opt_mux$3680
    New ctrl vector for $pmux cell $procmux$1371: { $procmux$1002_CMP $auto$opt_reduce.cc:134:opt_mux$3682 }
    New ctrl vector for $pmux cell $procmux$1417: { $procmux$1004_CMP $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y }
    New ctrl vector for $pmux cell $procmux$1746: { $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y $procmux$1004_CMP $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y $procmux$1002_CMP $procmux$1001_CMP $auto$opt_reduce.cc:134:opt_mux$3684 }
    New ctrl vector for $pmux cell $procmux$3197: { $logic_and$./designs/picorv32a/src/picorv32a.v:363$64_Y $auto$opt_reduce.cc:134:opt_mux$3686 }
  Optimizing cells in module \picorv32a.
Performed a total of 5 changes.

5.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

5.7.13. Executing OPT_DFF pass (perform DFF optimizations).

5.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

5.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.7.16. Rerunning OPT passes. (Maybe there is more to do..)

5.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

5.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.7.20. Executing OPT_DFF pass (perform DFF optimizations).

5.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.7.23. Finished OPT passes. (There is nothing left to do.)

5.8. Executing FSM pass (extract and optimize FSM).

5.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$14_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register picorv32a.cpu_state.
Not marking picorv32a.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking picorv32a.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register picorv32a.mem_wordsize.

5.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cpu_state' from module `\picorv32a'.
  found $dff cell for state register: $procdff$3519
  root of input selection tree: $0\cpu_state[7:0]
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1909$656_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1893$638_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$3680
  found ctrl input: $procmux$1001_CMP
  found ctrl input: $procmux$1002_CMP
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y
  found ctrl input: $procmux$1004_CMP
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$623_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1850$627_Y
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1809$605_Y
  found ctrl input: \alu_wait
  found ctrl input: \is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \mem_done
  found ctrl input: \is_sb_sh_sw
  found ctrl input: \instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \pcpi_mul.active [1]
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1755$590_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1758$594_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$3660
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1674$582_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$3666
  found state code: 8'00010000
  found state code: 8'00000001
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1516$549_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1526$557_Y
  found ctrl input: \decoder_trigger
  found ctrl input: \instr_jal
  found state code: 8'00100000
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1901$648_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1894$641_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1896$645_Y
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y
  found ctrl output: $procmux$1006_CMP
  found ctrl output: $procmux$1004_CMP
  found ctrl output: $procmux$1002_CMP
  found ctrl output: $procmux$1001_CMP
  found ctrl output: $procmux$1000_CMP
  found ctrl output: $procmux$1022_CMP
  ctrl inputs: { \pcpi_mul.active [1] $auto$opt_reduce.cc:134:opt_mux$3666 $auto$opt_reduce.cc:134:opt_mux$3660 $logic_and$./designs/picorv32a/src/picorv32a.v:1909$656_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1901$648_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1896$645_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1894$641_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1893$638_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1850$627_Y $logic_or$./designs/picorv32a/src/picorv32a.v:1835$623_Y $eq$./designs/picorv32a/src/picorv32a.v:1809$605_Y $auto$opt_reduce.cc:134:opt_mux$3680 $logic_and$./designs/picorv32a/src/picorv32a.v:1758$594_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1755$590_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1674$582_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1526$557_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1516$549_Y \alu_wait \is_beq_bne_blt_bge_bltu_bgeu \is_sb_sh_sw \decoder_trigger \instr_trap \instr_jal \mem_done \resetn }
  ctrl outputs: { $procmux$1000_CMP $procmux$1001_CMP $procmux$1002_CMP $procmux$1004_CMP $procmux$1006_CMP $procmux$1022_CMP $0\cpu_state[7:0] $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y }
  transition: 8'10000000 25'---0---0----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---0---0----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---00-01----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---00-01----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---00011----------------- -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---00111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---00111----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---010-1----------------- -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---01101----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---01101----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---01111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---01111----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---1-0------------------- -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---1-1-0----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---1-1-0----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---10101----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---10101----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---10111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---10111----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---11101----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---11101----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'10000000 25'---11111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'10000000 25'---11111----------------1 -> 8'10000000 16'0000101000000000
  transition: 8'01000000 25'---0---0----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---0---0-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---00-01-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00011----------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---00111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---00111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---010-1----------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---01101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---01101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---01111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-0------------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---1-1-0----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---1-1-0-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---10101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---10111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---11101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---11111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'00100000 25'---0---0----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-000---0------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-0---0----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---0---0------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--10---0----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---00-01----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0000-01------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-00-01----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---00-01------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--100-01----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---00011----------------- -> 8'10000000 16'0001001000000000
  transition: 8'00100000 25'---00111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0000111------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-00111----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---00111------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--100111----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---010-1----------------- -> 8'10000000 16'0001001000000000
  transition: 8'00100000 25'---01101----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0001101------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-01101----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---01101------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--101101----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---01111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0001111------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-01111----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---01111------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--101111----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---1-0------------------- -> 8'10000000 16'0001001000000000
  transition: 8'00100000 25'---1-1-0----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-001-1-0------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-1-1-0----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---1-1-0------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--11-1-0----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---10101----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0010101------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-10101----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---10101------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--110101----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---10111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0010111------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-10111----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---10111------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--110111----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---11101----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0011101------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-11101----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---11101------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--111101----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00100000 25'---11111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'-0011111------0---------1 -> 8'00010000 16'0001000001000000
  transition: 8'00100000 25'-1-11111----------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00100000 25'---11111------1---------1 -> 8'00000001 16'0001000000000100
  transition: 8'00100000 25'--111111----------------1 -> 8'00001000 16'0001000000100000
  transition: 8'00010000 25'---0---0----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---0---0-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--0---0-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--0---0----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--0---0----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--0---0-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---0---0-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---00-01----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00-01-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--00-01-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--00-01----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--00-01----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--00-01-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00-01-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---00011----------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---00111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--00111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--00111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--00111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--00111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---010-1----------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---01101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--01101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--01101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--01101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--01101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---01111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--01111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--01111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--01111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--01111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---1-0------------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---1-1-0----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---1-1-0-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--1-1-0-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--1-1-0----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--1-1-0----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--1-1-0-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---1-1-0-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---10101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--10101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--10101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--10101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--10101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---10111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--10111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--10111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--10111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--10111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---11101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--11101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--11101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--11101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--11101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---11111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--11111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--11111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--11111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--11111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00001000 25'---0---0----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---0---0---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---0---0---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---0---0---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---0---0---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00-01----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00-01---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00-01---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00-01---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00-01---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00011----------------- -> 8'10000000 16'0010001000000000
  transition: 8'00001000 25'---00111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---010-1----------------- -> 8'10000000 16'0010001000000000
  transition: 8'00001000 25'---01101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01101---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01101---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---01101---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01101---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---01111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---01111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---1-0------------------- -> 8'10000000 16'0010001000000000
  transition: 8'00001000 25'---1-1-0----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---1-1-0---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---1-1-0---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---1-1-0---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---1-1-0---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10101---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10101---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10101---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10101---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11101---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11101---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11101---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11101---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00000010 25'---0---0----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---0---0-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0---001--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0---011--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---00-01----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---00-01-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---00-0101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---00-0111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---00011----------------- -> 8'10000000 16'1000001000000000
  transition: 8'00000010 25'---00111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---00111-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0011101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0011111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---010-1----------------- -> 8'10000000 16'1000001000000000
  transition: 8'00000010 25'---01101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---01101-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0110101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0110111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---01111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---01111-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0111101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---0111111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---1-0------------------- -> 8'10000000 16'1000001000000000
  transition: 8'00000010 25'---1-1-0----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---1-1-0-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1-1-001--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1-1-011--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---10101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---10101-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1010101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1010111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---10111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---10111-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1011101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1011111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---11101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---11101-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1110101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1110111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---11111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00000010 25'---11111-0--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1111101--------------1 -> 8'00000010 16'1000000000001000
  transition: 8'00000010 25'---1111111--------------1 -> 8'01000000 16'1000000100000000
  transition: 8'00000001 25'---0---0----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---0---0-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0---001--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0---011--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00-01----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00-01-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---00-0101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---00-0111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00011----------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---00111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0011101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0011111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---010-1----------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---01101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0110101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0110111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0111101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0111111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---1-0------------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---1-1-0----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---1-1-0-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1-1-001--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1-1-011--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1010101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1010111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1011101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1011111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1110101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1110111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1111101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1111111--------------1 -> 8'01000000 16'0000010100000000
Extracting FSM `\mem_wordsize' from module `\picorv32a'.
  found $dff cell for state register: $procdff$3506
  root of input selection tree: $0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $procmux$1022_CMP
  found ctrl input: $procmux$1000_CMP
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$623_Y
  found ctrl input: \mem_do_rdata
  found ctrl input: \instr_lw
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1865$632_Y
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1864$631_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \mem_do_wdata
  found ctrl input: \instr_sw
  found ctrl input: \instr_sh
  found ctrl input: \instr_sb
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1894$639_Y
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1901$646_Y
  found ctrl output: $procmux$3439_CMP
  ctrl inputs: { $procmux$1000_CMP $procmux$1022_CMP $logic_or$./designs/picorv32a/src/picorv32a.v:1865$632_Y $logic_or$./designs/picorv32a/src/picorv32a.v:1864$631_Y $logic_or$./designs/picorv32a/src/picorv32a.v:1835$623_Y $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y \instr_sw \instr_sh \instr_sb \instr_lw \mem_do_wdata \mem_do_rdata \resetn }
  ctrl outputs: { $procmux$3439_CMP $eq$./designs/picorv32a/src/picorv32a.v:1901$646_Y $eq$./designs/picorv32a/src/picorv32a.v:1894$639_Y $0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'00---0------1 ->       2'00 5'00100
  transition:       2'00 13'-----1------1 ->       2'00 5'00100
  transition:       2'00 13'1---0-------1 ->       2'00 5'00100
  transition:       2'00 13'1---1-000-0-1 -> INVALID_STATE(2'xx) 5'001xx  <ignored invalid transition!>
  transition:       2'00 13'1---1---1-0-1 ->       2'10 5'00110
  transition:       2'00 13'1---1--1--0-1 ->       2'01 5'00101
  transition:       2'00 13'1---1-1---0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1-----1-1 ->       2'00 5'00100
  transition:       2'00 13'-1--0-------1 ->       2'00 5'00100
  transition:       2'00 13'-1001----0-01 -> INVALID_STATE(2'xx) 5'001xx  <ignored invalid transition!>
  transition:       2'00 13'-1-11------01 ->       2'10 5'00110
  transition:       2'00 13'-11-1------01 ->       2'01 5'00101
  transition:       2'00 13'-1--1----1-01 ->       2'00 5'00100
  transition:       2'00 13'-1--1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'00---0------1 ->       2'10 5'10010
  transition:       2'10 13'-----1------1 ->       2'00 5'10000
  transition:       2'10 13'1---0-------1 ->       2'10 5'10010
  transition:       2'10 13'1---1-000-0-1 -> INVALID_STATE(2'xx) 5'100xx  <ignored invalid transition!>
  transition:       2'10 13'1---1---1-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1--1--0-1 ->       2'01 5'10001
  transition:       2'10 13'1---1-1---0-1 ->       2'00 5'10000
  transition:       2'10 13'1---1-----1-1 ->       2'10 5'10010
  transition:       2'10 13'-1--0-------1 ->       2'10 5'10010
  transition:       2'10 13'-1001----0-01 -> INVALID_STATE(2'xx) 5'100xx  <ignored invalid transition!>
  transition:       2'10 13'-1-11------01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'01 5'10001
  transition:       2'10 13'-1--1----1-01 ->       2'00 5'10000
  transition:       2'10 13'-1--1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'00---0------1 ->       2'01 5'01001
  transition:       2'01 13'-----1------1 ->       2'00 5'01000
  transition:       2'01 13'1---0-------1 ->       2'01 5'01001
  transition:       2'01 13'1---1-000-0-1 -> INVALID_STATE(2'xx) 5'010xx  <ignored invalid transition!>
  transition:       2'01 13'1---1---1-0-1 ->       2'10 5'01010
  transition:       2'01 13'1---1--1--0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1-1---0-1 ->       2'00 5'01000
  transition:       2'01 13'1---1-----1-1 ->       2'01 5'01001
  transition:       2'01 13'-1--0-------1 ->       2'01 5'01001
  transition:       2'01 13'-1001----0-01 -> INVALID_STATE(2'xx) 5'010xx  <ignored invalid transition!>
  transition:       2'01 13'-1-11------01 ->       2'10 5'01010
  transition:       2'01 13'-11-1------01 ->       2'01 5'01001
  transition:       2'01 13'-1--1----1-01 ->       2'00 5'01000
  transition:       2'01 13'-1--1------11 ->       2'01 5'01001

5.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a'.
Optimizing FSM `$fsm$\cpu_state$3687' from module `\picorv32a'.
  Merging pattern 25'---10101----------------1 and 25'---10111----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---01101----------------1 and 25'---01111----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---11101----------------1 and 25'---11111----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---10111----------------1 and 25'---10101----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---01111----------------1 and 25'---01101----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---11111----------------1 and 25'---11101----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---101-1----------------1 and 25'---111-1----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---111-1----------------1 and 25'---101-1----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---1-1-0----------------1 and 25'---1-1-1----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---1-1-1----------------1 and 25'---1-1-0----------------1 from group (0 0 16'0000101000000000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (0 1 16'0000100100000000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---1-1-1 and 25'---10111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------00---1-1-1 and 25'---01111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------00---1-1-1 and 25'---11111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------00---1-1-1 and 25'---10101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------00---1-1-1 and 25'---01101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------00---1-1-1 and 25'---11101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---0---1 and 25'---10111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------00---0---1 and 25'---01111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------00---0---1 and 25'---11111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------00---0---1 and 25'---10101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------00---0---1 and 25'---01101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------00---0---1 and 25'---11101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------10-------1 and 25'---10111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------10-------1 and 25'---01111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------10-------1 and 25'---11111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------10-------1 and 25'---10101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------10-------1 and 25'---01101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------10-------1 and 25'---11101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101--------1-------1 and 25'---10111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101--------1-------1 and 25'---01111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101--------1-------1 and 25'---11111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111--------1-------1 and 25'---10101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111--------1-------1 and 25'---01101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111--------1-------1 and 25'---11101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------00---1-1-1 and 25'---111-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------00---1-1-1 and 25'---101-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------00---0---1 and 25'---111-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------00---0---1 and 25'---101-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------10-------1 and 25'---111-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------10-------1 and 25'---101-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1--------1-------1 and 25'---111-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1--------1-------1 and 25'---101-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------00---1-1-1 and 25'---1-1-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------00---1-1-1 and 25'---1-1-0-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------00---0---1 and 25'---1-1-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------00---0---1 and 25'---1-1-0-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------10-------1 and 25'---1-1-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------10-------1 and 25'---1-1-0-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0--------1-------1 and 25'---1-1-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1--------1-------1 and 25'---1-1-0--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---1-0-1 and 25'---10111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---01101-------00---1-0-1 and 25'---01111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---11101-------00---1-0-1 and 25'---11111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---10111-------00---1-0-1 and 25'---10101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---01111-------00---1-0-1 and 25'---01101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---11111-------00---1-0-1 and 25'---11101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---101-1-------00---1-0-1 and 25'---111-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---111-1-------00---1-0-1 and 25'---101-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---1-1-0-------00---1-0-1 and 25'---1-1-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---1-1-1-------00---1-0-1 and 25'---1-1-0-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-10101----------------1 and 25'-1-10111----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-01101----------------1 and 25'-1-01111----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-11101----------------1 and 25'-1-11111----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-10111----------------1 and 25'-1-10101----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-01111----------------1 and 25'-1-01101----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-11111----------------1 and 25'-1-11101----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-101-1----------------1 and 25'-1-111-1----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-111-1----------------1 and 25'-1-101-1----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-1-1-0----------------1 and 25'-1-1-1-1----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-1-1-1-1----------------1 and 25'-1-1-1-0----------------1 from group (2 1 16'0001000100000000).
  Merging pattern 25'-0010101------0---------1 and 25'-0010111------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-0001101------0---------1 and 25'-0001111------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-0011101------0---------1 and 25'-0011111------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-0010111------0---------1 and 25'-0010101------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-0001111------0---------1 and 25'-0001101------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-0011111------0---------1 and 25'-0011101------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-00101-1------0---------1 and 25'-00111-1------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-00111-1------0---------1 and 25'-00101-1------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-001-1-0------0---------1 and 25'-001-1-1------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'-001-1-1------0---------1 and 25'-001-1-0------0---------1 from group (2 3 16'0001000001000000).
  Merging pattern 25'--110101----------------1 and 25'--110111----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--101101----------------1 and 25'--101111----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--111101----------------1 and 25'--111111----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--110111----------------1 and 25'--110101----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--101111----------------1 and 25'--101101----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--111111----------------1 and 25'--111101----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--1101-1----------------1 and 25'--1111-1----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--1111-1----------------1 and 25'--1101-1----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--11-1-0----------------1 and 25'--11-1-1----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'--11-1-1----------------1 and 25'--11-1-0----------------1 from group (2 4 16'0001000000100000).
  Merging pattern 25'---10101------1---------1 and 25'---10111------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---01101------1---------1 and 25'---01111------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---11101------1---------1 and 25'---11111------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---10111------1---------1 and 25'---10101------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---01111------1---------1 and 25'---01101------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---11111------1---------1 and 25'---11101------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---101-1------1---------1 and 25'---111-1------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---111-1------1---------1 and 25'---101-1------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---1-1-0------1---------1 and 25'---1-1-1------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'---1-1-1------1---------1 and 25'---1-1-0------1---------1 from group (2 6 16'0001000000000100).
  Merging pattern 25'0--10101----01-------1--1 and 25'0--10111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--01101----01-------1--1 and 25'0--01111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--11101----01-------1--1 and 25'0--11111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--10111----01-------1--1 and 25'0--10101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--01111----01-------1--1 and 25'0--01101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--11111----01-------1--1 and 25'0--11101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--101-1----01-------1--1 and 25'0--111-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--111-1----01-------1--1 and 25'0--101-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--1-1-0----01-------1--1 and 25'0--1-1-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--1-1-1----01-------1--1 and 25'0--1-1-0----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--10101----11-------1--1 and 25'0--10111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--01101----11-------1--1 and 25'0--01111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--11101----11-------1--1 and 25'0--11111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--10111----11-------1--1 and 25'0--10101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--01111----11-------1--1 and 25'0--01101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--11111----11-------1--1 and 25'0--11101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--10101-------------1--1 and 25'1--10111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--01101-------------1--1 and 25'1--01111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--11101-------------1--1 and 25'1--11111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--10111-------------1--1 and 25'1--10101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--01111-------------1--1 and 25'1--01101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--11111-------------1--1 and 25'1--11101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--101-1----11-------1--1 and 25'0--111-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--111-1----11-------1--1 and 25'0--101-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--101-1-------------1--1 and 25'1--111-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--111-1-------------1--1 and 25'1--101-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--1-1-0----11-------1--1 and 25'0--1-1-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--1-1-1----11-------1--1 and 25'0--1-1-0----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--1-1-0-------------1--1 and 25'1--1-1-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--1-1-1-------------1--1 and 25'1--1-1-0-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--10101-----0-------1--1 and 25'0--10111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--01101-----0-------1--1 and 25'0--01111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--11101-----0-------1--1 and 25'0--11111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--10111-----0-------1--1 and 25'0--10101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--01111-----0-------1--1 and 25'0--01101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--11111-----0-------1--1 and 25'0--11101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--101-1-----0-------1--1 and 25'0--111-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--111-1-----0-------1--1 and 25'0--101-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--1-1-0-----0-------1--1 and 25'0--1-1-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--1-1-1-----0-------1--1 and 25'0--1-1-0-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'---10101-----------0-0--1 and 25'---10111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---01101-----------0-0--1 and 25'---01111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---11101-----------0-0--1 and 25'---11111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---10111-----------0-0--1 and 25'---10101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---01111-----------0-0--1 and 25'---01101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---11111-----------0-0--1 and 25'---11101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---101-1-----------0-0--1 and 25'---111-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---111-1-----------0-0--1 and 25'---101-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---1-1-0-----------0-0--1 and 25'---1-1-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---1-1-1-----------0-0--1 and 25'---1-1-0-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---10101-----------1----1 and 25'---10111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---01101-----------1----1 and 25'---01111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---11101-----------1----1 and 25'---11111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---10111-----------1----1 and 25'---10101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---01111-----------1----1 and 25'---01101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---11111-----------1----1 and 25'---11101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---101-1-----------1----1 and 25'---111-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---111-1-----------1----1 and 25'---101-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---1-1-0-----------1----1 and 25'---1-1-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---1-1-1-----------1----1 and 25'---1-1-0-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10101---------01----11 and 25'---10111---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01101---------01----11 and 25'---01111---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11101---------01----11 and 25'---11111---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10111---------01----11 and 25'---10101---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01111---------01----11 and 25'---01101---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11111---------01----11 and 25'---11101---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10101---------00-----1 and 25'---10111---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01101---------00-----1 and 25'---01111---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11101---------00-----1 and 25'---11111---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10111---------00-----1 and 25'---10101---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01111---------00-----1 and 25'---01101---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11111---------00-----1 and 25'---11101---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---101-1---------01----11 and 25'---111-1---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---111-1---------01----11 and 25'---101-1---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---101-1---------00-----1 and 25'---111-1---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---111-1---------00-----1 and 25'---101-1---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-0---------01----11 and 25'---1-1-1---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-1---------01----11 and 25'---1-1-0---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-0---------00-----1 and 25'---1-1-1---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-1---------00-----1 and 25'---1-1-0---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10101---------01----01 and 25'---10111---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01101---------01----01 and 25'---01111---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11101---------01----01 and 25'---11111---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10111---------01----01 and 25'---10101---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01111---------01----01 and 25'---01101---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11111---------01----01 and 25'---11101---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10101---------1------1 and 25'---10111---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01101---------1------1 and 25'---01111---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11101---------1------1 and 25'---11111---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10111---------1------1 and 25'---10101---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01111---------1------1 and 25'---01101---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11111---------1------1 and 25'---11101---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---101-1---------01----01 and 25'---111-1---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---111-1---------01----01 and 25'---101-1---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---101-1---------1------1 and 25'---111-1---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---111-1---------1------1 and 25'---101-1---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-0---------01----01 and 25'---1-1-1---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-1---------01----01 and 25'---1-1-0---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-0---------1------1 and 25'---1-1-1---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-1---------1------1 and 25'---1-1-0---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1010111--------------1 and 25'---1011111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---0110111--------------1 and 25'---0111111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1110111--------------1 and 25'---1111111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1011111--------------1 and 25'---1010111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---0111111--------------1 and 25'---0110111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1111111--------------1 and 25'---1110111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---101-111--------------1 and 25'---111-111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---111-111--------------1 and 25'---101-111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1-1-011--------------1 and 25'---1-1-111--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---1-1-111--------------1 and 25'---1-1-011--------------1 from group (5 1 16'1000000100000000).
  Merging pattern 25'---10101-0--------------1 and 25'---10111-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---01101-0--------------1 and 25'---01111-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---11101-0--------------1 and 25'---11111-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---10111-0--------------1 and 25'---10101-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---01111-0--------------1 and 25'---01101-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---11111-0--------------1 and 25'---11101-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1010101--------------1 and 25'---1011101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---0110101--------------1 and 25'---0111101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1110101--------------1 and 25'---1111101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1011101--------------1 and 25'---1010101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---0111101--------------1 and 25'---0110101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1111101--------------1 and 25'---1110101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---101-1-0--------------1 and 25'---111-1-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---111-1-0--------------1 and 25'---101-1-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---101-101--------------1 and 25'---111-101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---111-101--------------1 and 25'---101-101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1-1-0-0--------------1 and 25'---1-1-1-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1-1-1-0--------------1 and 25'---1-1-0-0--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1-1-001--------------1 and 25'---1-1-101--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---1-1-101--------------1 and 25'---1-1-001--------------1 from group (5 5 16'1000000000001000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1010111--------------1 and 25'---1011111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---0110111--------------1 and 25'---0111111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1110111--------------1 and 25'---1111111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1011111--------------1 and 25'---1010111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---0111111--------------1 and 25'---0110111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1111111--------------1 and 25'---1110111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---101-111--------------1 and 25'---111-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---111-111--------------1 and 25'---101-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-011--------------1 and 25'---1-1-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-111--------------1 and 25'---1-1-011--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---10101-0--------------1 and 25'---10111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---01101-0--------------1 and 25'---01111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---11101-0--------------1 and 25'---11111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---10111-0--------------1 and 25'---10101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---01111-0--------------1 and 25'---01101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---11111-0--------------1 and 25'---11101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1010101--------------1 and 25'---1011101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---0110101--------------1 and 25'---0111101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1110101--------------1 and 25'---1111101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1011101--------------1 and 25'---1010101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---0111101--------------1 and 25'---0110101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1111101--------------1 and 25'---1110101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---101-1-0--------------1 and 25'---111-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---111-1-0--------------1 and 25'---101-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---101-101--------------1 and 25'---111-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---111-101--------------1 and 25'---101-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-0-0--------------1 and 25'---1-1-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-1-0--------------1 and 25'---1-1-0-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-001--------------1 and 25'---1-1-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-101--------------1 and 25'---1-1-001--------------1 from group (6 6 16'0000010000000100).
  Removing unused input signal $eq$./designs/picorv32a/src/picorv32a.v:1809$605_Y.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_mux$3680.

5.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 45 unused cells and 45 unused wires.
<suppressed ~46 debug messages>

5.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu_state$3687' from module `\picorv32a'.
  Removing unused output signal $0\cpu_state[7:0] [0].
  Removing unused output signal $0\cpu_state[7:0] [1].
  Removing unused output signal $0\cpu_state[7:0] [2].
  Removing unused output signal $0\cpu_state[7:0] [3].
  Removing unused output signal $0\cpu_state[7:0] [4].
  Removing unused output signal $0\cpu_state[7:0] [5].
  Removing unused output signal $0\cpu_state[7:0] [6].
  Removing unused output signal $0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a'.
  Removing unused output signal $0\mem_wordsize[1:0] [0].
  Removing unused output signal $0\mem_wordsize[1:0] [1].

5.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cpu_state$3687' from module `\picorv32a' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00010000 -> ---1---
  00001000 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

5.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cpu_state$3687' from module `picorv32a':
-------------------------------------

  Information on FSM $fsm$\cpu_state$3687 (\cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \resetn
    1: \mem_done
    2: \instr_jal
    3: \instr_trap
    4: \decoder_trigger
    5: \is_sb_sh_sw
    6: \is_beq_bne_blt_bge_bltu_bgeu
    7: \alu_wait
    8: $logic_and$./designs/picorv32a/src/picorv32a.v:1516$549_Y
    9: $logic_and$./designs/picorv32a/src/picorv32a.v:1526$557_Y
   10: $logic_and$./designs/picorv32a/src/picorv32a.v:1674$582_Y
   11: $logic_and$./designs/picorv32a/src/picorv32a.v:1755$590_Y
   12: $logic_and$./designs/picorv32a/src/picorv32a.v:1758$594_Y
   13: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$623_Y
   14: $logic_and$./designs/picorv32a/src/picorv32a.v:1850$627_Y
   15: $logic_and$./designs/picorv32a/src/picorv32a.v:1893$638_Y
   16: $logic_and$./designs/picorv32a/src/picorv32a.v:1894$641_Y
   17: $logic_and$./designs/picorv32a/src/picorv32a.v:1896$645_Y
   18: $logic_and$./designs/picorv32a/src/picorv32a.v:1901$648_Y
   19: $logic_and$./designs/picorv32a/src/picorv32a.v:1909$656_Y
   20: $auto$opt_reduce.cc:134:opt_mux$3660
   21: $auto$opt_reduce.cc:134:opt_mux$3666
   22: \pcpi_mul.active [1]

  Output signals:
    0: $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y
    1: $eq$./designs/picorv32a/src/picorv32a.v:1331$485_Y
    2: $procmux$1022_CMP
    3: $procmux$1006_CMP
    4: $procmux$1004_CMP
    5: $procmux$1002_CMP
    6: $procmux$1001_CMP
    7: $procmux$1000_CMP

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'---0---0--------------1   ->     0 8'00001000
      1:     0 23'---00-01--------------1   ->     0 8'00001000
      2:     0 23'---00111--------------1   ->     0 8'00001000
      3:     0 23'---011-1--------------1   ->     0 8'00001000
      4:     0 23'---1-1----------------1   ->     0 8'00001000
      5:     0 23'---00011---------------   ->     0 8'00001000
      6:     0 23'---010-1---------------   ->     0 8'00001000
      7:     0 23'---1-0-----------------   ->     0 8'00001000
      8:     0 23'---0---0--------------0   ->     1 8'00001000
      9:     0 23'---00-01--------------0   ->     1 8'00001000
     10:     0 23'---00111--------------0   ->     1 8'00001000
     11:     0 23'---011-1--------------0   ->     1 8'00001000
     12:     0 23'---1-1----------------0   ->     1 8'00001000
     13:     1 23'---00011---------------   ->     0 8'00000001
     14:     1 23'---010-1---------------   ->     0 8'00000001
     15:     1 23'---1-0-----------------   ->     0 8'00000001
     16:     1 23'---0---0--------------0   ->     1 8'00000001
     17:     1 23'---00-01--------------0   ->     1 8'00000001
     18:     1 23'---00111--------------0   ->     1 8'00000001
     19:     1 23'---011-1--------------0   ->     1 8'00000001
     20:     1 23'---1-1----------------0   ->     1 8'00000001
     21:     1 23'---0---0-----00---1-1-1   ->     1 8'00000001
     22:     1 23'---00-01-----00---1-1-1   ->     1 8'00000001
     23:     1 23'---00111-----00---1-1-1   ->     1 8'00000001
     24:     1 23'---011-1-----00---1-1-1   ->     1 8'00000001
     25:     1 23'---1-1-------00---1-1-1   ->     1 8'00000001
     26:     1 23'---0---0-----00---0---1   ->     1 8'00000001
     27:     1 23'---00-01-----00---0---1   ->     1 8'00000001
     28:     1 23'---00111-----00---0---1   ->     1 8'00000001
     29:     1 23'---011-1-----00---0---1   ->     1 8'00000001
     30:     1 23'---1-1-------00---0---1   ->     1 8'00000001
     31:     1 23'---0---0-----10-------1   ->     1 8'00000001
     32:     1 23'---00-01-----10-------1   ->     1 8'00000001
     33:     1 23'---00111-----10-------1   ->     1 8'00000001
     34:     1 23'---011-1-----10-------1   ->     1 8'00000001
     35:     1 23'---1-1-------10-------1   ->     1 8'00000001
     36:     1 23'---0---0------1-------1   ->     1 8'00000001
     37:     1 23'---00-01------1-------1   ->     1 8'00000001
     38:     1 23'---00111------1-------1   ->     1 8'00000001
     39:     1 23'---011-1------1-------1   ->     1 8'00000001
     40:     1 23'---1-1--------1-------1   ->     1 8'00000001
     41:     1 23'---0---0-----00---1-0-1   ->     2 8'00000001
     42:     1 23'---00-01-----00---1-0-1   ->     2 8'00000001
     43:     1 23'---00111-----00---1-0-1   ->     2 8'00000001
     44:     1 23'---011-1-----00---1-0-1   ->     2 8'00000001
     45:     1 23'---1-1-------00---1-0-1   ->     2 8'00000001
     46:     2 23'---00011---------------   ->     0 8'00010000
     47:     2 23'---010-1---------------   ->     0 8'00010000
     48:     2 23'---1-0-----------------   ->     0 8'00010000
     49:     2 23'---0---0--------------0   ->     1 8'00010000
     50:     2 23'---00-01--------------0   ->     1 8'00010000
     51:     2 23'---00111--------------0   ->     1 8'00010000
     52:     2 23'---011-1--------------0   ->     1 8'00010000
     53:     2 23'---1-1----------------0   ->     1 8'00010000
     54:     2 23'-1-0---0--------------1   ->     1 8'00010000
     55:     2 23'-1-00-01--------------1   ->     1 8'00010000
     56:     2 23'-1-00111--------------1   ->     1 8'00010000
     57:     2 23'-1-011-1--------------1   ->     1 8'00010000
     58:     2 23'-1-1-1----------------1   ->     1 8'00010000
     59:     2 23'-000---0----0---------1   ->     3 8'00010000
     60:     2 23'-0000-01----0---------1   ->     3 8'00010000
     61:     2 23'-0000111----0---------1   ->     3 8'00010000
     62:     2 23'-00011-1----0---------1   ->     3 8'00010000
     63:     2 23'-001-1------0---------1   ->     3 8'00010000
     64:     2 23'--10---0--------------1   ->     4 8'00010000
     65:     2 23'--100-01--------------1   ->     4 8'00010000
     66:     2 23'--100111--------------1   ->     4 8'00010000
     67:     2 23'--1011-1--------------1   ->     4 8'00010000
     68:     2 23'--11-1----------------1   ->     4 8'00010000
     69:     2 23'---0---0----1---------1   ->     6 8'00010000
     70:     2 23'---00-01----1---------1   ->     6 8'00010000
     71:     2 23'---00111----1---------1   ->     6 8'00010000
     72:     2 23'---011-1----1---------1   ->     6 8'00010000
     73:     2 23'---1-1------1---------1   ->     6 8'00010000
     74:     3 23'0--0---0--01-------1--1   ->     0 8'00000010
     75:     3 23'0--00-01--01-------1--1   ->     0 8'00000010
     76:     3 23'0--00111--01-------1--1   ->     0 8'00000010
     77:     3 23'0--011-1--01-------1--1   ->     0 8'00000010
     78:     3 23'0--1-1----01-------1--1   ->     0 8'00000010
     79:     3 23'---00011---------------   ->     0 8'00000010
     80:     3 23'---010-1---------------   ->     0 8'00000010
     81:     3 23'---1-0-----------------   ->     0 8'00000010
     82:     3 23'---0---0--------------0   ->     1 8'00000010
     83:     3 23'---00-01--------------0   ->     1 8'00000010
     84:     3 23'---00111--------------0   ->     1 8'00000010
     85:     3 23'---011-1--------------0   ->     1 8'00000010
     86:     3 23'---1-1----------------0   ->     1 8'00000010
     87:     3 23'0--0---0--11-------1--1   ->     1 8'00000010
     88:     3 23'0--00-01--11-------1--1   ->     1 8'00000010
     89:     3 23'0--00111--11-------1--1   ->     1 8'00000010
     90:     3 23'0--011-1--11-------1--1   ->     1 8'00000010
     91:     3 23'0--1-1----11-------1--1   ->     1 8'00000010
     92:     3 23'1--0---0-----------1--1   ->     1 8'00000010
     93:     3 23'1--00-01-----------1--1   ->     1 8'00000010
     94:     3 23'1--00111-----------1--1   ->     1 8'00000010
     95:     3 23'1--011-1-----------1--1   ->     1 8'00000010
     96:     3 23'1--1-1-------------1--1   ->     1 8'00000010
     97:     3 23'0--0---0---0-------1--1   ->     3 8'00000010
     98:     3 23'0--00-01---0-------1--1   ->     3 8'00000010
     99:     3 23'0--00111---0-------1--1   ->     3 8'00000010
    100:     3 23'0--011-1---0-------1--1   ->     3 8'00000010
    101:     3 23'0--1-1-----0-------1--1   ->     3 8'00000010
    102:     3 23'---0---0---------0-0--1   ->     4 8'00000010
    103:     3 23'---00-01---------0-0--1   ->     4 8'00000010
    104:     3 23'---00111---------0-0--1   ->     4 8'00000010
    105:     3 23'---011-1---------0-0--1   ->     4 8'00000010
    106:     3 23'---1-1-----------0-0--1   ->     4 8'00000010
    107:     3 23'---0---0---------1----1   ->     5 8'00000010
    108:     3 23'---00-01---------1----1   ->     5 8'00000010
    109:     3 23'---00111---------1----1   ->     5 8'00000010
    110:     3 23'---011-1---------1----1   ->     5 8'00000010
    111:     3 23'---1-1-----------1----1   ->     5 8'00000010
    112:     4 23'---00011---------------   ->     0 8'00100000
    113:     4 23'---010-1---------------   ->     0 8'00100000
    114:     4 23'---1-0-----------------   ->     0 8'00100000
    115:     4 23'---0---0--------------0   ->     1 8'00100000
    116:     4 23'---00-01--------------0   ->     1 8'00100000
    117:     4 23'---00111--------------0   ->     1 8'00100000
    118:     4 23'---011-1--------------0   ->     1 8'00100000
    119:     4 23'---1-1----------------0   ->     1 8'00100000
    120:     4 23'---0---0-------01----11   ->     1 8'00100000
    121:     4 23'---00-01-------01----11   ->     1 8'00100000
    122:     4 23'---00111-------01----11   ->     1 8'00100000
    123:     4 23'---011-1-------01----11   ->     1 8'00100000
    124:     4 23'---1-1---------01----11   ->     1 8'00100000
    125:     4 23'---0---0-------00-----1   ->     1 8'00100000
    126:     4 23'---00-01-------00-----1   ->     1 8'00100000
    127:     4 23'---00111-------00-----1   ->     1 8'00100000
    128:     4 23'---011-1-------00-----1   ->     1 8'00100000
    129:     4 23'---1-1---------00-----1   ->     1 8'00100000
    130:     4 23'---0---0-------01----01   ->     4 8'00100000
    131:     4 23'---00-01-------01----01   ->     4 8'00100000
    132:     4 23'---00111-------01----01   ->     4 8'00100000
    133:     4 23'---011-1-------01----01   ->     4 8'00100000
    134:     4 23'---1-1---------01----01   ->     4 8'00100000
    135:     4 23'---0---0-------1------1   ->     4 8'00100000
    136:     4 23'---00-01-------1------1   ->     4 8'00100000
    137:     4 23'---00111-------1------1   ->     4 8'00100000
    138:     4 23'---011-1-------1------1   ->     4 8'00100000
    139:     4 23'---1-1---------1------1   ->     4 8'00100000
    140:     5 23'---00011---------------   ->     0 8'10000000
    141:     5 23'---010-1---------------   ->     0 8'10000000
    142:     5 23'---1-0-----------------   ->     0 8'10000000
    143:     5 23'---0---0--------------0   ->     1 8'10000000
    144:     5 23'---00-01--------------0   ->     1 8'10000000
    145:     5 23'---00111--------------0   ->     1 8'10000000
    146:     5 23'---011-1--------------0   ->     1 8'10000000
    147:     5 23'---1-1----------------0   ->     1 8'10000000
    148:     5 23'---0---011------------1   ->     1 8'10000000
    149:     5 23'---00-0111------------1   ->     1 8'10000000
    150:     5 23'---0011111------------1   ->     1 8'10000000
    151:     5 23'---011-111------------1   ->     1 8'10000000
    152:     5 23'---1-1--11------------1   ->     1 8'10000000
    153:     5 23'---0---0-0------------1   ->     5 8'10000000
    154:     5 23'---00-01-0------------1   ->     5 8'10000000
    155:     5 23'---00111-0------------1   ->     5 8'10000000
    156:     5 23'---011-1-0------------1   ->     5 8'10000000
    157:     5 23'---1-1---0------------1   ->     5 8'10000000
    158:     5 23'---0---001------------1   ->     5 8'10000000
    159:     5 23'---00-0101------------1   ->     5 8'10000000
    160:     5 23'---0011101------------1   ->     5 8'10000000
    161:     5 23'---011-101------------1   ->     5 8'10000000
    162:     5 23'---1-1--01------------1   ->     5 8'10000000
    163:     6 23'---00011---------------   ->     0 8'00000100
    164:     6 23'---010-1---------------   ->     0 8'00000100
    165:     6 23'---1-0-----------------   ->     0 8'00000100
    166:     6 23'---0---0--------------0   ->     1 8'00000100
    167:     6 23'---00-01--------------0   ->     1 8'00000100
    168:     6 23'---00111--------------0   ->     1 8'00000100
    169:     6 23'---011-1--------------0   ->     1 8'00000100
    170:     6 23'---1-1----------------0   ->     1 8'00000100
    171:     6 23'---0---011------------1   ->     1 8'00000100
    172:     6 23'---00-0111------------1   ->     1 8'00000100
    173:     6 23'---0011111------------1   ->     1 8'00000100
    174:     6 23'---011-111------------1   ->     1 8'00000100
    175:     6 23'---1-1--11------------1   ->     1 8'00000100
    176:     6 23'---0---0-0------------1   ->     6 8'00000100
    177:     6 23'---00-01-0------------1   ->     6 8'00000100
    178:     6 23'---00111-0------------1   ->     6 8'00000100
    179:     6 23'---011-1-0------------1   ->     6 8'00000100
    180:     6 23'---1-1---0------------1   ->     6 8'00000100
    181:     6 23'---0---001------------1   ->     6 8'00000100
    182:     6 23'---00-0101------------1   ->     6 8'00000100
    183:     6 23'---0011101------------1   ->     6 8'00000100
    184:     6 23'---011-101------------1   ->     6 8'00000100
    185:     6 23'---1-1--01------------1   ->     6 8'00000100

-------------------------------------

FSM `$fsm$\mem_wordsize$3697' from module `picorv32a':
-------------------------------------

  Information on FSM $fsm$\mem_wordsize$3697 (\mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: \mem_do_rdata
    2: \mem_do_wdata
    3: \instr_lw
    4: \instr_sb
    5: \instr_sh
    6: \instr_sw
    7: $eq$./designs/picorv32a/src/picorv32a.v:1291$467_Y
    8: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$623_Y
    9: $logic_or$./designs/picorv32a/src/picorv32a.v:1864$631_Y
   10: $logic_or$./designs/picorv32a/src/picorv32a.v:1865$632_Y
   11: $procmux$1022_CMP
   12: $procmux$1000_CMP

  Output signals:
    0: $eq$./designs/picorv32a/src/picorv32a.v:1894$639_Y
    1: $eq$./designs/picorv32a/src/picorv32a.v:1901$646_Y
    2: $procmux$3439_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'-1--1----1-01   ->     0 3'001
      2:     0 13'-1--1------11   ->     0 3'001
      3:     0 13'1---1-1---0-1   ->     0 3'001
      4:     0 13'1---1-----1-1   ->     0 3'001
      5:     0 13'00---0------1   ->     0 3'001
      6:     0 13'-----1------1   ->     0 3'001
      7:     0 13'-1--0-------1   ->     0 3'001
      8:     0 13'1---0-------1   ->     0 3'001
      9:     0 13'-1-11------01   ->     1 3'001
     10:     0 13'1---1---1-0-1   ->     1 3'001
     11:     0 13'-11-1------01   ->     2 3'001
     12:     0 13'1---1--1--0-1   ->     2 3'001
     13:     1 13'-1--1----1-01   ->     0 3'100
     14:     1 13'1---1-1---0-1   ->     0 3'100
     15:     1 13'-----1------1   ->     0 3'100
     16:     1 13'------------0   ->     1 3'100
     17:     1 13'-1-11------01   ->     1 3'100
     18:     1 13'-1--1------11   ->     1 3'100
     19:     1 13'1---1---1-0-1   ->     1 3'100
     20:     1 13'1---1-----1-1   ->     1 3'100
     21:     1 13'00---0------1   ->     1 3'100
     22:     1 13'-1--0-------1   ->     1 3'100
     23:     1 13'1---0-------1   ->     1 3'100
     24:     1 13'-11-1------01   ->     2 3'100
     25:     1 13'1---1--1--0-1   ->     2 3'100
     26:     2 13'-1--1----1-01   ->     0 3'010
     27:     2 13'1---1-1---0-1   ->     0 3'010
     28:     2 13'-----1------1   ->     0 3'010
     29:     2 13'-1-11------01   ->     1 3'010
     30:     2 13'1---1---1-0-1   ->     1 3'010
     31:     2 13'------------0   ->     2 3'010
     32:     2 13'-11-1------01   ->     2 3'010
     33:     2 13'-1--1------11   ->     2 3'010
     34:     2 13'1---1--1--0-1   ->     2 3'010
     35:     2 13'1---1-----1-1   ->     2 3'010
     36:     2 13'00---0------1   ->     2 3'010
     37:     2 13'-1--0-------1   ->     2 3'010
     38:     2 13'1---0-------1   ->     2 3'010

-------------------------------------

5.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cpu_state$3687' from module `\picorv32a'.
Mapping FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a'.

5.9. Executing OPT pass (performing simple optimizations).

5.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~5 debug messages>

5.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

5.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/7 on $pmux $procmux$1446.
    dead port 1/2 on $mux $procmux$1449.
    dead port 2/2 on $mux $procmux$1449.
    dead port 1/2 on $mux $procmux$1496.
    dead port 2/2 on $mux $procmux$1496.
    dead port 1/2 on $mux $procmux$1499.
    dead port 2/2 on $mux $procmux$1499.
    dead port 1/3 on $pmux $procmux$1501.
    dead port 1/2 on $mux $procmux$1919.
    dead port 2/2 on $mux $procmux$1919.
    dead port 1/6 on $pmux $procmux$1921.
    dead port 3/5 on $pmux $procmux$2128.
    dead port 1/4 on $pmux $procmux$2137.
    dead port 2/4 on $pmux $procmux$2137.
    dead port 3/4 on $pmux $procmux$2137.
    dead port 4/4 on $pmux $procmux$2137.
    dead port 1/4 on $pmux $procmux$2142.
    dead port 2/4 on $pmux $procmux$2142.
    dead port 3/4 on $pmux $procmux$2142.
    dead port 4/4 on $pmux $procmux$2142.
    dead port 1/2 on $mux $procmux$2146.
    dead port 2/2 on $mux $procmux$2146.
    dead port 1/2 on $mux $procmux$2149.
    dead port 2/2 on $mux $procmux$2149.
Removed 24 multiplexer ports.
<suppressed ~162 debug messages>

5.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3677: { \cpu_state [6:4] \cpu_state [2] \cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3675: { \cpu_state [6:2] \cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3655: { \cpu_state [6:5] \cpu_state [3:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3653: \cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3651: { \cpu_state [6] \cpu_state [4:0] }
  Optimizing cells in module \picorv32a.
Performed a total of 5 changes.

5.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$3646 ($dff) from module picorv32a (D = \mem_rdata, Q = \mem_rdata_q).
Adding EN signal on $procdff$3635 ($dff) from module picorv32a (D = $0\mem_state[1:0], Q = \mem_state).
Adding EN signal on $procdff$3634 ($dff) from module picorv32a (D = $procmux$3167_Y, Q = \mem_wstrb).
Adding EN signal on $procdff$3633 ($dff) from module picorv32a (D = \mem_la_wdata, Q = \mem_wdata).
Adding EN signal on $procdff$3632 ($dff) from module picorv32a (D = \mem_la_addr, Q = \mem_addr).
Adding EN signal on $procdff$3631 ($dff) from module picorv32a (D = $procmux$3187_Y, Q = \mem_instr).
Adding SRST signal on $auto$opt_dff.cc:764:run$4365 ($dffe) from module picorv32a (D = $procmux$3185_Y, Q = \mem_instr, rval = 1'0).
Adding EN signal on $procdff$3630 ($dff) from module picorv32a (D = $0\mem_valid[0:0], Q = \mem_valid).
Adding SRST signal on $procdff$3614 ($dff) from module picorv32a (D = $reduce_or$./designs/picorv32a/src/picorv32a.v:845$172_Y, Q = \is_compare, rval = 1'0).
Adding EN signal on $procdff$3613 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:859$192_Y, Q = \is_alu_reg_reg).
Adding EN signal on $procdff$3612 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:858$191_Y, Q = \is_alu_reg_imm).
Adding SRST signal on $procdff$3610 ($dff) from module picorv32a (D = $procmux$2548_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4385 ($sdff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:855$188_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $procdff$3607 ($dff) from module picorv32a (D = $reduce_or$./designs/picorv32a/src/picorv32a.v:841$168_Y, Q = \is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $procdff$3605 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:857$190_Y, Q = \is_sb_sh_sw).
Adding EN signal on $procdff$3604 ($dff) from module picorv32a (D = $logic_or$./designs/picorv32a/src/picorv32a.v:1081$410_Y, Q = \is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $procdff$3603 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1075$401_Y, Q = \is_slli_srli_srai).
Adding EN signal on $procdff$3602 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:856$189_Y, Q = \is_lb_lh_lw_lbu_lhu).
Adding EN signal on $procdff$3600 ($dff) from module picorv32a (D = 1'0, Q = \compressed_instr).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$4392 ($dffe) from module picorv32a.
Adding EN signal on $procdff$3599 ($dff) from module picorv32a (D = { \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [19:12] \mem_rdata_latched [20] \mem_rdata_latched [30:21] 1'0 }, Q = \decoded_imm_uj).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$4393 ($dffe) from module picorv32a.
Adding EN signal on $procdff$3598 ($dff) from module picorv32a (D = $procmux$2594_Y, Q = \decoded_imm).
Adding EN signal on $procdff$3597 ($dff) from module picorv32a (D = \mem_rdata_latched [24:20], Q = \decoded_rs2).
Adding EN signal on $procdff$3596 ($dff) from module picorv32a (D = { $procmux$2349_Y $procmux$2433_Y }, Q = \decoded_rs1).
Adding SRST signal on $auto$opt_dff.cc:764:run$4396 ($dffe) from module picorv32a (D = \mem_rdata_latched [18:15], Q = \decoded_rs1 [3:0], rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$4396 ($dffe) from module picorv32a (D = \mem_rdata_latched [19], Q = \decoded_rs1 [4], rval = 1'1).
Adding EN signal on $procdff$3595 ($dff) from module picorv32a (D = \mem_rdata_latched [11:7], Q = \decoded_rd).
Adding EN signal on $procdff$3594 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1073$388_Y, Q = \instr_timer).
Adding EN signal on $procdff$3593 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:853$186_Y, Q = \instr_waitirq).
Adding EN signal on $procdff$3592 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1072$384_Y, Q = \instr_maskirq).
Adding EN signal on $procdff$3591 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:852$182_Y, Q = \instr_retirq).
Adding EN signal on $procdff$3590 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1071$379_Y, Q = \instr_setq).
Adding EN signal on $procdff$3589 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1070$374_Y, Q = \instr_getq).
Adding EN signal on $procdff$3588 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1067$368_Y, Q = \instr_ecall_ebreak).
Adding EN signal on $procdff$3587 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1065$361_Y, Q = \instr_rdinstrh).
Adding EN signal on $procdff$3586 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1064$357_Y, Q = \instr_rdinstr).
Adding EN signal on $procdff$3585 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1062$353_Y, Q = \instr_rdcycleh).
Adding EN signal on $procdff$3584 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1060$345_Y, Q = \instr_rdcycle).
Adding SRST signal on $procdff$3583 ($dff) from module picorv32a (D = $procmux$2704_Y, Q = \instr_and, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4413 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1058$337_Y, Q = \instr_and).
Adding SRST signal on $procdff$3582 ($dff) from module picorv32a (D = $procmux$2708_Y, Q = \instr_or, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4415 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1057$333_Y, Q = \instr_or).
Adding SRST signal on $procdff$3581 ($dff) from module picorv32a (D = $procmux$2712_Y, Q = \instr_sra, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4417 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1056$329_Y, Q = \instr_sra).
Adding SRST signal on $procdff$3580 ($dff) from module picorv32a (D = $procmux$2716_Y, Q = \instr_srl, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4419 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1055$325_Y, Q = \instr_srl).
Adding SRST signal on $procdff$3579 ($dff) from module picorv32a (D = $procmux$2720_Y, Q = \instr_xor, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4421 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1054$321_Y, Q = \instr_xor).
Adding SRST signal on $procdff$3578 ($dff) from module picorv32a (D = $procmux$2724_Y, Q = \instr_sltu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4423 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1053$317_Y, Q = \instr_sltu).
Adding SRST signal on $procdff$3577 ($dff) from module picorv32a (D = $procmux$2728_Y, Q = \instr_slt, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4425 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1052$313_Y, Q = \instr_slt).
Adding SRST signal on $procdff$3576 ($dff) from module picorv32a (D = $procmux$2732_Y, Q = \instr_sll, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4427 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1051$309_Y, Q = \instr_sll).
Adding SRST signal on $procdff$3575 ($dff) from module picorv32a (D = $procmux$2736_Y, Q = \instr_sub, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4429 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1050$305_Y, Q = \instr_sub).
Adding SRST signal on $procdff$3574 ($dff) from module picorv32a (D = $procmux$2740_Y, Q = \instr_add, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4431 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1049$301_Y, Q = \instr_add).
Adding EN signal on $procdff$3573 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1047$297_Y, Q = \instr_srai).
Adding EN signal on $procdff$3572 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1046$293_Y, Q = \instr_srli).
Adding EN signal on $procdff$3571 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1045$289_Y, Q = \instr_slli).
Adding SRST signal on $procdff$3570 ($dff) from module picorv32a (D = $procmux$2750_Y, Q = \instr_andi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4436 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1043$285_Y, Q = \instr_andi).
Adding SRST signal on $procdff$3569 ($dff) from module picorv32a (D = $procmux$2754_Y, Q = \instr_ori, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4438 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1042$283_Y, Q = \instr_ori).
Adding SRST signal on $procdff$3568 ($dff) from module picorv32a (D = $procmux$2758_Y, Q = \instr_xori, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4440 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1041$281_Y, Q = \instr_xori).
Adding SRST signal on $procdff$3567 ($dff) from module picorv32a (D = $procmux$2762_Y, Q = \instr_sltiu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4442 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1040$279_Y, Q = \instr_sltiu).
Adding SRST signal on $procdff$3566 ($dff) from module picorv32a (D = $procmux$2766_Y, Q = \instr_slti, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4444 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1039$277_Y, Q = \instr_slti).
Adding SRST signal on $procdff$3565 ($dff) from module picorv32a (D = $procmux$2770_Y, Q = \instr_addi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4446 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1038$275_Y, Q = \instr_addi).
Adding EN signal on $procdff$3564 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1036$273_Y, Q = \instr_sw).
Adding EN signal on $procdff$3563 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1035$271_Y, Q = \instr_sh).
Adding EN signal on $procdff$3562 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1034$269_Y, Q = \instr_sb).
Adding EN signal on $procdff$3561 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1032$267_Y, Q = \instr_lhu).
Adding EN signal on $procdff$3560 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1031$265_Y, Q = \instr_lbu).
Adding EN signal on $procdff$3559 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1030$263_Y, Q = \instr_lw).
Adding EN signal on $procdff$3558 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1029$261_Y, Q = \instr_lh).
Adding EN signal on $procdff$3557 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1028$259_Y, Q = \instr_lb).
Adding SRST signal on $procdff$3556 ($dff) from module picorv32a (D = $procmux$2790_Y, Q = \instr_bgeu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4456 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1026$257_Y, Q = \instr_bgeu).
Adding SRST signal on $procdff$3555 ($dff) from module picorv32a (D = $procmux$2794_Y, Q = \instr_bltu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4458 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1025$255_Y, Q = \instr_bltu).
Adding SRST signal on $procdff$3554 ($dff) from module picorv32a (D = $procmux$2798_Y, Q = \instr_bge, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4460 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1024$253_Y, Q = \instr_bge).
Adding SRST signal on $procdff$3553 ($dff) from module picorv32a (D = $procmux$2802_Y, Q = \instr_blt, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4462 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1023$251_Y, Q = \instr_blt).
Adding SRST signal on $procdff$3552 ($dff) from module picorv32a (D = $procmux$2806_Y, Q = \instr_bne, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4464 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1022$249_Y, Q = \instr_bne).
Adding SRST signal on $procdff$3551 ($dff) from module picorv32a (D = $procmux$2810_Y, Q = \instr_beq, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4466 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1021$247_Y, Q = \instr_beq).
Adding EN signal on $procdff$3550 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:851$179_Y, Q = \instr_jalr).
Adding EN signal on $procdff$3549 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:850$176_Y, Q = \instr_jal).
Adding EN signal on $procdff$3548 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:849$175_Y, Q = \instr_auipc).
Adding EN signal on $procdff$3547 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:848$174_Y, Q = \instr_lui).
Adding EN signal on $procdff$3546 ($dff) from module picorv32a (D = \mem_rdata_q, Q = \pcpi_insn).
Adding SRST signal on $procdff$3540 ($dff) from module picorv32a (D = $procmux$1417_Y, Q = \alu_wait, rval = 1'0).
Adding SRST signal on $procdff$3537 ($dff) from module picorv32a (D = $procmux$1336_Y, Q = \do_waitirq, rval = 1'0).
Adding SRST signal on $procdff$3535 ($dff) from module picorv32a (D = $logic_not$./designs/picorv32a/src/picorv32a.v:1401$505_Y, Q = \pcpi_timeout, rval = 1'0).
Adding SRST signal on $procdff$3534 ($dff) from module picorv32a (D = $procmux$1526_Y, Q = \pcpi_timeout_counter, rval = 4'1111).
Adding EN signal on $auto$opt_dff.cc:702:run$4484 ($sdff) from module picorv32a (D = $sub$./designs/picorv32a/src/picorv32a.v:1398$504_Y [3:0], Q = \pcpi_timeout_counter).
Adding EN signal on $procdff$3532 ($dff) from module picorv32a (D = $procmux$1541_Y, Q = \latched_rd).
Adding SRST signal on $procdff$3531 ($dff) from module picorv32a (D = $procmux$1567_Y, Q = \latched_is_lb, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4497 ($sdff) from module picorv32a (D = $procmux$1567_Y, Q = \latched_is_lb).
Adding SRST signal on $procdff$3530 ($dff) from module picorv32a (D = $procmux$1580_Y, Q = \latched_is_lh, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4507 ($sdff) from module picorv32a (D = $procmux$1580_Y, Q = \latched_is_lh).
Adding SRST signal on $procdff$3529 ($dff) from module picorv32a (D = $procmux$1593_Y, Q = \latched_is_lu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4517 ($sdff) from module picorv32a (D = $procmux$1593_Y, Q = \latched_is_lu).
Adding EN signal on $procdff$3527 ($dff) from module picorv32a (D = \compressed_instr, Q = \latched_compr).
Adding SRST signal on $procdff$3526 ($dff) from module picorv32a (D = $procmux$1638_Y, Q = \latched_branch, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4532 ($sdff) from module picorv32a (D = $procmux$1638_Y, Q = \latched_branch).
Adding SRST signal on $procdff$3525 ($dff) from module picorv32a (D = $procmux$1674_Y, Q = \latched_stalu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4542 ($sdff) from module picorv32a (D = $procmux$1674_Y, Q = \latched_stalu).
Adding SRST signal on $procdff$3524 ($dff) from module picorv32a (D = $procmux$1681_Y, Q = \latched_store, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4552 ($sdff) from module picorv32a (D = $procmux$1681_Y, Q = \latched_store).
Adding SRST signal on $procdff$3520 ($dff) from module picorv32a (D = $procmux$1735_Y, Q = \irq_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$4566 ($sdff) from module picorv32a (D = $ternary$./designs/picorv32a/src/picorv32a.v:1518$553_Y, Q = \irq_state).
Adding SRST signal on $procdff$3513 ($dff) from module picorv32a (D = $procmux$1350_Y, Q = \decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $procdff$3510 ($dff) from module picorv32a (D = $procmux$1907_Y, Q = \mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$4573 ($sdff) from module picorv32a (D = 1'0, Q = \mem_do_wdata).
Adding SRST signal on $procdff$3509 ($dff) from module picorv32a (D = $procmux$1911_Y, Q = \mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$4575 ($sdff) from module picorv32a (D = 1'0, Q = \mem_do_rdata).
Adding SRST signal on $procdff$3508 ($dff) from module picorv32a (D = $procmux$1967_Y, Q = \mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$4577 ($sdff) from module picorv32a (D = $procmux$1967_Y, Q = \mem_do_rinst).
Adding SRST signal on $procdff$3507 ($dff) from module picorv32a (D = $procmux$1992_Y, Q = \mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4593 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1551$567_Y, Q = \mem_do_prefetch).
Adding SRST signal on $procdff$3505 ($dff) from module picorv32a (D = $procmux$2039_Y, Q = \timer, rval = 0).
Adding SRST signal on $procdff$3503 ($dff) from module picorv32a (D = $procmux$2057_Y, Q = \irq_mask, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$opt_dff.cc:702:run$4604 ($sdff) from module picorv32a (D = \cpuregs_rs1, Q = \irq_mask).
Adding SRST signal on $procdff$3502 ($dff) from module picorv32a (D = $procmux$2076_Y, Q = \irq_active, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4608 ($sdff) from module picorv32a (D = $procmux$2076_Y, Q = \irq_active).
Adding SRST signal on $procdff$3501 ($dff) from module picorv32a (D = $procmux$2101_Y, Q = \irq_delay, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4618 ($sdff) from module picorv32a (D = \irq_active, Q = \irq_delay).
Adding EN signal on $procdff$3498 ($dff) from module picorv32a (D = $procmux$2111_Y, Q = \reg_op2).
Adding EN signal on $procdff$3497 ($dff) from module picorv32a (D = $procmux$2128_Y, Q = \reg_op1).
Adding SRST signal on $procdff$3496 ($dff) from module picorv32a (D = $procmux$2189_Y, Q = \reg_next_pc, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$4644 ($sdff) from module picorv32a (D = $procmux$2187_Y, Q = \reg_next_pc).
Adding SRST signal on $procdff$3495 ($dff) from module picorv32a (D = $procmux$2201_Y, Q = \reg_pc, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$4646 ($sdff) from module picorv32a (D = $3\current_pc[31:0], Q = \reg_pc).
Adding SRST signal on $procdff$3494 ($dff) from module picorv32a (D = $procmux$2221_Y, Q = \count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$4648 ($sdff) from module picorv32a (D = $add$./designs/picorv32a/src/picorv32a.v:1542$563_Y, Q = \count_instr).
Adding SRST signal on $procdff$3493 ($dff) from module picorv32a (D = $add$./designs/picorv32a/src/picorv32a.v:1405$506_Y, Q = \count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$3490 ($dff) from module picorv32a (D = $procmux$2240_Y, Q = \eoi, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$4657 ($sdff) from module picorv32a (D = $procmux$2240_Y, Q = \eoi).
Adding SRST signal on $procdff$3489 ($dff) from module picorv32a (D = $procmux$2265_Y, Q = \pcpi_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$4667 ($sdff) from module picorv32a (D = $procmux$2261_Y, Q = \pcpi_valid).
Adding SRST signal on $procdff$3488 ($dff) from module picorv32a (D = $procmux$1520_Y, Q = \trap, rval = 1'0).
Adding SRST signal on $flatten\pcpi_mul.$procdff$3482 ($dff) from module picorv32a (D = { \pcpi_mul.active [2:0] $flatten\pcpi_mul.$procmux$867_Y }, Q = \pcpi_mul.active, rval = 4'0000).
Adding EN signal on $flatten\pcpi_mul.$procdff$3480 ($dff) from module picorv32a (D = $flatten\pcpi_mul.$procmux$873_Y, Q = \pcpi_mul.rs2).
Adding SRST signal on $auto$opt_dff.cc:764:run$4673 ($dffe) from module picorv32a (D = \reg_op2 [31], Q = \pcpi_mul.rs2 [32], rval = 1'0).
Adding EN signal on $flatten\pcpi_mul.$procdff$3479 ($dff) from module picorv32a (D = $flatten\pcpi_mul.$procmux$879_Y, Q = \pcpi_mul.rs1).
Adding SRST signal on $auto$opt_dff.cc:764:run$4675 ($dffe) from module picorv32a (D = \reg_op1 [31], Q = \pcpi_mul.rs1 [32], rval = 1'0).

5.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 192 unused cells and 226 unused wires.
<suppressed ~194 debug messages>

5.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~16 debug messages>

5.9.9. Rerunning OPT passes. (Maybe there is more to do..)

5.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

5.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

5.9.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$4531 ($dffe) from module picorv32a.

5.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 1 unused cells and 31 unused wires.
<suppressed ~2 debug messages>

5.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~2 debug messages>

5.9.16. Rerunning OPT passes. (Maybe there is more to do..)

5.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

5.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.9.20. Executing OPT_DFF pass (perform DFF optimizations).

5.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

5.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.9.23. Rerunning OPT passes. (Maybe there is more to do..)

5.9.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

5.9.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.9.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.9.27. Executing OPT_DFF pass (perform DFF optimizations).

5.9.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.9.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.9.30. Finished OPT passes. (There is nothing left to do.)

5.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3872 ($eq).
Removed top 3 bits (of 4) from port A of cell picorv32a.$shl$./designs/picorv32a/src/picorv32a.v:402$96 ($shl).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3884 ($eq).
Removed top 30 bits (of 32) from mux cell picorv32a.$ternary$./designs/picorv32a/src/picorv32a.v:600$155 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:848$174 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:849$175 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:852$180 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:852$181 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:853$185 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:856$189 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:857$190 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:858$191 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:859$192 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3848 ($eq).
Removed top 4 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3864 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1022$248 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1030$262 ($eq).
Removed top 2 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3792 ($eq).
Removed top 1 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3796 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1040$278 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3804 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1047$296 ($eq).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3856 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3808 ($eq).
Removed top 3 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3812 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3816 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3820 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4503 ($ne).
Removed top 3 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1070$372 ($eq).
Removed top 6 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1071$378 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1072$383 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1073$387 ($eq).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3844 ($eq).
Removed top 29 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1295$469 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1398$504 ($sub).
Removed top 28 bits (of 32) from port Y of cell picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1398$504 ($sub).
Removed top 31 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1405$506 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1415$511 ($sub).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3888 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1519$551 ($eq).
Removed top 27 bits (of 32) from port A of cell picorv32a.$or$./designs/picorv32a/src/picorv32a.v:1522$554 ($or).
Removed top 27 bits (of 32) from port Y of cell picorv32a.$or$./designs/picorv32a/src/picorv32a.v:1522$554 ($or).
Removed top 29 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1530$560 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1542$563 ($add).
Removed top 27 bits (of 32) from port B of cell picorv32a.$or$./designs/picorv32a/src/picorv32a.v:1641$575 ($or).
Removed top 27 bits (of 32) from port Y of cell picorv32a.$or$./designs/picorv32a/src/picorv32a.v:1641$575 ($or).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3707 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3711 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4320 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3876 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3868 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3788 ($eq).
Removed top 1 bits (of 33) from port Y of cell picorv32a.$sshr$./designs/picorv32a/src/picorv32a.v:1214$678 ($sshr).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4085 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3892 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4081 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3784 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4089 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3852 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4130 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3912 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3908 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3904 ($eq).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3924 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3896 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3916 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4126 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3930 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3936 ($eq).
Removed cell picorv32a.$procmux$1208 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3942 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4122 ($eq).
Removed cell picorv32a.$procmux$1211 ($mux).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3975 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3979 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4118 ($eq).
Removed top 2 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3983 ($eq).
Removed top 1 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3987 ($eq).
Removed cell picorv32a.$procmux$1442 ($mux).
Removed cell picorv32a.$procmux$1444 ($mux).
Removed cell picorv32a.$procmux$1457 ($mux).
Removed cell picorv32a.$procmux$1459 ($mux).
Removed cell picorv32a.$procmux$1481 ($mux).
Removed cell picorv32a.$procmux$1483 ($mux).
Removed cell picorv32a.$procmux$1486 ($mux).
Removed cell picorv32a.$procmux$1490 ($mux).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4338 ($ne).
Removed top 4 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3996 ($eq).
Removed cell picorv32a.$procmux$1536 ($mux).
Removed cell picorv32a.$procmux$1539 ($mux).
Removed cell picorv32a.$procmux$1550 ($mux).
Removed top 4 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4000 ($eq).
Removed cell picorv32a.$procmux$1563 ($mux).
Removed cell picorv32a.$procmux$1565 ($mux).
Removed cell picorv32a.$procmux$1576 ($mux).
Removed cell picorv32a.$procmux$1578 ($mux).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4004 ($eq).
Removed cell picorv32a.$procmux$1589 ($mux).
Removed cell picorv32a.$procmux$1591 ($mux).
Removed cell picorv32a.$procmux$1636 ($mux).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4008 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4231 ($eq).
Removed cell picorv32a.$procmux$1646 ($mux).
Removed cell picorv32a.$procmux$1669 ($mux).
Removed cell picorv32a.$procmux$1672 ($mux).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4012 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4227 ($eq).
Removed cell picorv32a.$procmux$1688 ($mux).
Removed cell picorv32a.$procmux$1695 ($mux).
Removed cell picorv32a.$procmux$1697 ($mux).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4016 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4223 ($eq).
Removed cell picorv32a.$procmux$1704 ($mux).
Removed top 3 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3715 ($eq).
Removed top 5 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4020 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4219 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4024 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3719 ($eq).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3776 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3723 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3772 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4028 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3727 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3768 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3731 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3764 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3735 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3760 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3758 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4211 ($eq).
Removed cell picorv32a.$procmux$1924 ($mux).
Removed cell picorv32a.$procmux$1935 ($mux).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4032 ($eq).
Removed cell picorv32a.$procmux$1942 ($mux).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4207 ($eq).
Removed cell picorv32a.$procmux$1965 ($mux).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3756 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3739 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4037 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4203 ($eq).
Removed top 1 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3749 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4041 ($eq).
Removed cell picorv32a.$procmux$2074 ($mux).
Removed cell picorv32a.$procmux$2080 ($mux).
Removed top 3 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4199 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4045 ($eq).
Removed cell picorv32a.$procmux$2124 ($mux).
Removed cell picorv32a.$procmux$2126 ($mux).
Removed cell picorv32a.$procmux$2132 ($mux).
Removed cell picorv32a.$procmux$2134 ($mux).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4049 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4191 ($eq).
Removed cell picorv32a.$procmux$2238 ($mux).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4187 ($eq).
Removed cell picorv32a.$procmux$2243 ($mux).
Removed top 4 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4057 ($eq).
Removed cell picorv32a.$procmux$2272 ($mux).
Removed cell picorv32a.$procmux$2274 ($mux).
Removed cell picorv32a.$procmux$2295 ($mux).
Removed cell picorv32a.$procmux$3137 ($mux).
Removed cell picorv32a.$procmux$3141 ($mux).
Removed cell picorv32a.$procmux$3147 ($mux).
Removed top 1 bits (of 2) from port B of cell picorv32a.$procmux$3149_CMP0 ($eq).
Removed cell picorv32a.$procmux$3150 ($mux).
Removed cell picorv32a.$procmux$3156 ($mux).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4061 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4183 ($eq).
Removed cell picorv32a.$procmux$3185 ($mux).
Removed cell picorv32a.$procmux$3195 ($mux).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4065 ($eq).
Removed cell picorv32a.$procmux$3205 ($mux).
Removed cell picorv32a.$procmux$3207 ($mux).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4179 ($eq).
Removed cell picorv32a.$procmux$3211 ($mux).
Removed top 24 bits (of 32) from mux cell picorv32a.$procmux$3433 ($pmux).
Removed top 1 bits (of 2) from port B of cell picorv32a.$procmux$3436_CMP0 ($eq).
Removed top 16 bits (of 32) from mux cell picorv32a.$procmux$3442 ($pmux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4069 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4077 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4374 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4638 ($ne).
Removed top 1 bits (of 4) from FF cell picorv32a.$auto$opt_dff.cc:702:run$4672 ($sdff).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3747 ($eq).
Removed top 31 bits (of 32) from FF cell picorv32a.$procdff$3544 ($dff).
Removed top 11 bits (of 31) from FF cell picorv32a.$auto$opt_dff.cc:764:run$4393 ($dffe).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4589 ($ne).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4587 ($ne).
Removed top 1 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4585 ($ne).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4583 ($ne).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4581 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4562 ($ne).
Removed top 1 bits (of 3) from port B of cell picorv32a.$auto$opt_dff.cc:218:make_patterns_logic$4556 ($ne).
Removed top 2 bits (of 3) from port B of cell picorv32a.$flatten\pcpi_mul.$procmux$918_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$flatten\pcpi_mul.$procmux$910_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$flatten\pcpi_mul.$procmux$903_CMP0 ($eq).
Removed cell picorv32a.$flatten\pcpi_mul.$procmux$879 ($mux).
Removed cell picorv32a.$flatten\pcpi_mul.$procmux$873 ($mux).
Removed top 32 bits (of 64) from mux cell picorv32a.$flatten\pcpi_mul.$ternary$./designs/picorv32a/src/picorv32a.v:2339$788 ($mux).
Removed top 31 bits (of 64) from port A of cell picorv32a.$flatten\pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$781 ($mul).
Removed top 31 bits (of 64) from port B of cell picorv32a.$flatten\pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$781 ($mul).
Removed top 6 bits (of 7) from port B of cell picorv32a.$flatten\pcpi_mul.$eq$./designs/picorv32a/src/picorv32a.v:2273$774 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$flatten\pcpi_mul.$eq$./designs/picorv32a/src/picorv32a.v:2273$772 ($eq).
Removed top 1 bits (of 3) from FF cell picorv32a.$auto$opt_dff.cc:702:run$4672 ($sdff).
Removed top 16 bits (of 32) from wire picorv32a.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire picorv32a.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire picorv32a.$or$./designs/picorv32a/src/picorv32a.v:1522$554_Y.
Removed top 28 bits (of 32) from wire picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1398$504_Y.

5.11. Executing PEEPOPT pass (run peephole optimizers).

5.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 61 unused wires.
<suppressed ~1 debug messages>

5.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module picorv32a:
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1209$670 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1295$469 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1405$506 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1530$560 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1542$563 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1547$564 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1784$600 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1847$625 ($add).
  creating $macc model for $flatten\pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$781 ($mul).
  creating $macc model for $sub$./designs/picorv32a/src/picorv32a.v:1209$669 ($sub).
  creating $macc model for $sub$./designs/picorv32a/src/picorv32a.v:1398$504 ($sub).
  creating $macc model for $sub$./designs/picorv32a/src/picorv32a.v:1415$511 ($sub).
  creating $alu model for $macc $sub$./designs/picorv32a/src/picorv32a.v:1415$511.
  creating $alu model for $macc $sub$./designs/picorv32a/src/picorv32a.v:1398$504.
  creating $alu model for $macc $sub$./designs/picorv32a/src/picorv32a.v:1209$669.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1847$625.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1784$600.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1547$564.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1542$563.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1530$560.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1405$506.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1295$469.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1209$670.
  creating $macc cell for $flatten\pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$781: $auto$alumacc.cc:365:replace_macc$4681
  creating $alu model for $lt$./designs/picorv32a/src/picorv32a.v:1211$673 ($lt): new $alu
  creating $alu model for $lt$./designs/picorv32a/src/picorv32a.v:1212$674 ($lt): new $alu
  creating $alu model for $eq$./designs/picorv32a/src/picorv32a.v:1210$672 ($eq): merged with $lt$./designs/picorv32a/src/picorv32a.v:1212$674.
  creating $alu cell for $lt$./designs/picorv32a/src/picorv32a.v:1212$674, $eq$./designs/picorv32a/src/picorv32a.v:1210$672: $auto$alumacc.cc:485:replace_alu$4684
  creating $alu cell for $lt$./designs/picorv32a/src/picorv32a.v:1211$673: $auto$alumacc.cc:485:replace_alu$4695
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1209$670: $auto$alumacc.cc:485:replace_alu$4708
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1295$469: $auto$alumacc.cc:485:replace_alu$4711
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1405$506: $auto$alumacc.cc:485:replace_alu$4714
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1530$560: $auto$alumacc.cc:485:replace_alu$4717
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1542$563: $auto$alumacc.cc:485:replace_alu$4720
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1547$564: $auto$alumacc.cc:485:replace_alu$4723
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1784$600: $auto$alumacc.cc:485:replace_alu$4726
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1847$625: $auto$alumacc.cc:485:replace_alu$4729
  creating $alu cell for $sub$./designs/picorv32a/src/picorv32a.v:1209$669: $auto$alumacc.cc:485:replace_alu$4732
  creating $alu cell for $sub$./designs/picorv32a/src/picorv32a.v:1398$504: $auto$alumacc.cc:485:replace_alu$4735
  creating $alu cell for $sub$./designs/picorv32a/src/picorv32a.v:1415$511: $auto$alumacc.cc:485:replace_alu$4738
  created 13 $alu and 1 $macc cells.

5.14. Executing SHARE pass (SAT-based resource sharing).

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1681: { \cpu_state [1] \cpu_state [3] \cpu_state [4] $auto$opt_reduce.cc:134:opt_mux$4742 }
    New ctrl vector for $pmux cell $procmux$1931: $auto$opt_reduce.cc:134:opt_mux$4744
    New ctrl vector for $pmux cell $procmux$2128: { \cpu_state [2] $auto$opt_reduce.cc:134:opt_mux$4746 }
    New ctrl vector for $pmux cell $procmux$3139: { $logic_and$./designs/picorv32a/src/picorv32a.v:363$64_Y $procmux$3149_CMP $auto$opt_reduce.cc:134:opt_mux$4748 }
  Optimizing cells in module \picorv32a.
Performed a total of 4 changes.

5.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

5.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$4377 ($dffe) from module picorv32a (D = $procmux$3197_Y, Q = \mem_valid, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$4347 ($dffe) from module picorv32a (D = $procmux$3139_Y, Q = \mem_state, rval = 2'00).

5.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 2 unused cells and 7 unused wires.
<suppressed ~3 debug messages>

5.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.15.9. Rerunning OPT passes. (Maybe there is more to do..)

5.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.15.13. Executing OPT_DFF pass (perform DFF optimizations).

5.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.15.16. Finished OPT passes. (There is nothing left to do.)

5.16. Executing MEMORY pass.

5.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:0$679' in module `\picorv32a': merged $dff to cell.
Checking cell `$memrd$\cpuregs$./designs/picorv32a/src/picorv32a.v:1333$487' in module `\picorv32a': no (compatible) $dff found.

5.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

5.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\cpuregs' in module `\picorv32a':
  $memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:0$679 ($memwr)
  $memrd$\cpuregs$./designs/picorv32a/src/picorv32a.v:1333$487 ($memrd)

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.18. Executing OPT pass (performing simple optimizations).

5.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~117 debug messages>

5.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.18.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$4496 ($dffe) from module picorv32a (D = $procmux$1541_Y [3:0], Q = \latched_rd [3:0]).

5.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 10 unused cells and 39 unused wires.
<suppressed ~15 debug messages>

5.18.5. Rerunning OPT passes. (Removed registers in this run.)

5.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~1 debug messages>

5.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.18.8. Executing OPT_DFF pass (perform DFF optimizations).

5.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.18.10. Finished fast OPT passes.

5.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \cpuregs in module \picorv32a:
  created 20 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 20 write mux blocks.

5.20. Executing OPT pass (performing simple optimizations).

5.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~37 debug messages>

5.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$4770: { $auto$opt_dff.cc:217:make_patterns_logic$4767 $auto$opt_dff.cc:217:make_patterns_logic$4486 $auto$opt_dff.cc:217:make_patterns_logic$4492 $auto$opt_dff.cc:217:make_patterns_logic$4490 $auto$opt_dff.cc:217:make_patterns_logic$4488 \resetn }
    Consolidated identical input bits for $pmux cell $procmux$1438:
      Old ports: A=\mem_rdata_word, B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:0] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7:0] }, Y=$procmux$1438_Y
      New ports: A=\mem_rdata_word [31:8], B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] }, Y=$procmux$1438_Y [31:8]
      New connections: $procmux$1438_Y [7:0] = \mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $procmux$1921: { $auto$opt_reduce.cc:134:opt_mux$5070 \cpu_state [4] }
    Consolidated identical input bits for $mux cell $procmux$2176:
      Old ports: A={ $add$./designs/picorv32a/src/picorv32a.v:1530$560_Y [31:2] $3\current_pc[31:0] [1:0] }, B={ $add$./designs/picorv32a/src/picorv32a.v:1547$564_Y [31:1] $3\current_pc[31:0] [0] }, Y=$procmux$2176_Y
      New ports: A={ $add$./designs/picorv32a/src/picorv32a.v:1530$560_Y [31:2] $3\current_pc[31:0] [1] }, B=$add$./designs/picorv32a/src/picorv32a.v:1547$564_Y [31:1], Y=$procmux$2176_Y [31:1]
      New connections: $procmux$2176_Y [0] = $3\current_pc[31:0] [0]
    Consolidated identical input bits for $mux cell $procmux$2182:
      Old ports: A=$3\current_pc[31:0], B={ $add$./designs/picorv32a/src/picorv32a.v:1530$560_Y [31:2] $3\current_pc[31:0] [1:0] }, Y=$procmux$2182_Y
      New ports: A=$3\current_pc[31:0] [31:2], B=$add$./designs/picorv32a/src/picorv32a.v:1530$560_Y [31:2], Y=$procmux$2182_Y [31:2]
      New connections: $procmux$2182_Y [1:0] = $3\current_pc[31:0] [1:0]
    Consolidated identical input bits for $pmux cell $procmux$3458:
      Old ports: A=\reg_op2, B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata
      New ports: A=\reg_op2 [31:8], B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata [31:8]
      New connections: \mem_la_wdata [7:0] = \reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:1519$552:
      Old ports: A=2'00, B=2'10, Y=$ternary$./designs/picorv32a/src/picorv32a.v:1519$552_Y
      New ports: A=1'0, B=1'1, Y=$ternary$./designs/picorv32a/src/picorv32a.v:1519$552_Y [1]
      New connections: $ternary$./designs/picorv32a/src/picorv32a.v:1519$552_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:365$80:
      Old ports: A={ \reg_op1 [31:2] 2'00 }, B={ \next_pc [31:2] 2'00 }, Y=\mem_la_addr
      New ports: A=\reg_op1 [31:2], B=\next_pc [31:2], Y=\mem_la_addr [31:2]
      New connections: \mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:394$95:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y [2] $ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y [0] }
      New connections: { $ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y [3] $ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y [1] } = { $ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y [2] $ternary$./designs/picorv32a/src/picorv32a.v:394$95_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:600$155:
      Old ports: A=2'11, B=2'00, Y=$procmux$3145_Y
      New ports: A=1'1, B=1'0, Y=$procmux$3145_Y [0]
      New connections: $procmux$3145_Y [1] = $procmux$3145_Y [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$2178:
      Old ports: A=$3\current_pc[31:0], B=$procmux$2176_Y, Y=$procmux$2178_Y
      New ports: A=$3\current_pc[31:0] [31:1], B=$procmux$2176_Y [31:1], Y=$procmux$2178_Y [31:1]
      New connections: $procmux$2178_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$2184:
      Old ports: A=$procmux$2178_Y, B={ $procmux$2182_Y [31:2] $3\current_pc[31:0] [1:0] }, Y=$procmux$2184_Y
      New ports: A=$procmux$2178_Y [31:1], B={ $procmux$2182_Y [31:2] $3\current_pc[31:0] [1] }, Y=$procmux$2184_Y [31:1]
      New connections: $procmux$2184_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$2187:
      Old ports: A=$procmux$2184_Y, B=$3\current_pc[31:0], Y=$procmux$2187_Y
      New ports: A=$procmux$2184_Y [31:1], B=$3\current_pc[31:0] [31:1], Y=$procmux$2187_Y [31:1]
      New connections: $procmux$2187_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
Performed a total of 13 changes.

5.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $ternary$./designs/picorv32a/src/picorv32a.v:1209$671 in front of them:
        $auto$alumacc.cc:485:replace_alu$4732
        $auto$alumacc.cc:485:replace_alu$4708

5.20.7. Executing OPT_DFF pass (perform DFF optimizations).

5.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

5.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~5 debug messages>

5.20.10. Rerunning OPT passes. (Maybe there is more to do..)

5.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

5.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.14. Executing OPT_SHARE pass.

5.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\cpuregs[9]$4790 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[9]).
Adding EN signal on $memory\cpuregs[8]$4788 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[8]).
Adding EN signal on $memory\cpuregs[7]$4786 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[7]).
Adding EN signal on $memory\cpuregs[6]$4784 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[6]).
Adding EN signal on $memory\cpuregs[5]$4782 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[5]).
Adding EN signal on $memory\cpuregs[4]$4780 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[4]).
Adding EN signal on $memory\cpuregs[3]$4778 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[3]).
Adding EN signal on $memory\cpuregs[2]$4776 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[2]).
Adding EN signal on $memory\cpuregs[1]$4774 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[1]).
Adding EN signal on $memory\cpuregs[19]$4810 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[19]).
Adding EN signal on $memory\cpuregs[18]$4808 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[18]).
Adding EN signal on $memory\cpuregs[17]$4806 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[17]).
Adding EN signal on $memory\cpuregs[16]$4804 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[16]).
Adding EN signal on $memory\cpuregs[15]$4802 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[15]).
Adding EN signal on $memory\cpuregs[14]$4800 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[14]).
Adding EN signal on $memory\cpuregs[13]$4798 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[13]).
Adding EN signal on $memory\cpuregs[12]$4796 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[12]).
Adding EN signal on $memory\cpuregs[11]$4794 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[11]).
Adding EN signal on $memory\cpuregs[10]$4792 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[10]).
Adding EN signal on $memory\cpuregs[0]$4772 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[0]).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$4358 ($dffe) from module picorv32a.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$4358 ($dffe) from module picorv32a.

5.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 20 unused cells and 24 unused wires.
<suppressed ~21 debug messages>

5.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.20.18. Rerunning OPT passes. (Maybe there is more to do..)

5.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

5.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.22. Executing OPT_SHARE pass.

5.20.23. Executing OPT_DFF pass (perform DFF optimizations).

5.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.20.26. Finished OPT passes. (There is nothing left to do.)

5.21. Executing TECHMAP pass (map to technology primitives).

5.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \pcpi_mul.rs1 * \pcpi_mul.rs2 (33x33 bits, signed)
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_fa\WIDTH=64 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=63 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=64\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=31 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=30 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
No more expansions possible.
<suppressed ~5911 debug messages>

5.22. Executing OPT pass (performing simple optimizations).

5.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~6595 debug messages>

5.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~10968 debug messages>
Removed a total of 3656 cells.

5.22.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14508 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [16], Q = \alu_shl [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14509 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [17], Q = \alu_shl [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14510 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [18], Q = \alu_shl [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14511 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [19], Q = \alu_shl [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14512 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [20], Q = \alu_shl [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14513 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [21], Q = \alu_shl [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14514 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [22], Q = \alu_shl [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14515 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [23], Q = \alu_shl [7], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14516 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [24], Q = \alu_shl [8], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14517 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [25], Q = \alu_shl [9], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14518 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [26], Q = \alu_shl [10], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14519 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [27], Q = \alu_shl [11], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14520 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [28], Q = \alu_shl [12], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14521 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [29], Q = \alu_shl [13], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14522 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [30], Q = \alu_shl [14], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14523 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$675.$10\buffer[31:0] [31], Q = \alu_shl [15], rval = 1'0).

5.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 531 unused cells and 4018 unused wires.
<suppressed ~532 debug messages>

5.22.5. Rerunning OPT passes. (Removed registers in this run.)

5.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.22.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$13999 ($_SDFFE_PN0P_) from module picorv32a (D = $procmux$1205.B_AND_S [32], Q = \reg_next_pc [0]).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$14281 ($_SDFF_PN0_) from module picorv32a (D = $procmux$1417.Y_B, Q = \alu_wait, rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5205 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [3], Q = \latched_rd [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5204 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [2], Q = \latched_rd [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5203 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [1], Q = \latched_rd [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5202 ($_DFFE_PP_) from module picorv32a (D = $procmux$1541.A [0], Q = \latched_rd [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14407 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [31], Q = \decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14406 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [30], Q = \decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14405 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [29], Q = \decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14404 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [28], Q = \decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14403 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [27], Q = \decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14402 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [26], Q = \decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14401 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [25], Q = \decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14400 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [24], Q = \decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14399 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [23], Q = \decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14398 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [22], Q = \decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14397 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [21], Q = \decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14396 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [20], Q = \decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14395 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [19], Q = \decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14394 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [18], Q = \decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14393 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [17], Q = \decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14392 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [16], Q = \decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14391 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [15], Q = \decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14390 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [14], Q = \decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14389 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [13], Q = \decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14388 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [12], Q = \decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14387 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [11], Q = \decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14386 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [10], Q = \decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14385 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [9], Q = \decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14384 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [8], Q = \decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14383 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [7], Q = \decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14382 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [6], Q = \decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14381 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [5], Q = \decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14380 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [4], Q = \decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14379 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [3], Q = \decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14378 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [2], Q = \decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$14377 ($_DFFE_PP_) from module picorv32a (D = $procmux$2594.Y_B [1], Q = \decoded_imm [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14159 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [31], Q = \irq_pending [31], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14158 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [30], Q = \irq_pending [30], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14157 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [29], Q = \irq_pending [29], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14156 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [28], Q = \irq_pending [28], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14155 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [27], Q = \irq_pending [27], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14154 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [26], Q = \irq_pending [26], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14153 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [25], Q = \irq_pending [25], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14152 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [24], Q = \irq_pending [24], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14151 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [23], Q = \irq_pending [23], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14150 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [22], Q = \irq_pending [22], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14149 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [21], Q = \irq_pending [21], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14148 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [20], Q = \irq_pending [20], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14147 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [19], Q = \irq_pending [19], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14146 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [18], Q = \irq_pending [18], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14145 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [17], Q = \irq_pending [17], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14144 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [16], Q = \irq_pending [16], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14143 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [15], Q = \irq_pending [15], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14142 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [14], Q = \irq_pending [14], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14141 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [13], Q = \irq_pending [13], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14140 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [12], Q = \irq_pending [12], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14139 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [11], Q = \irq_pending [11], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14138 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [10], Q = \irq_pending [10], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14137 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [9], Q = \irq_pending [9], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14136 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [8], Q = \irq_pending [8], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14135 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [7], Q = \irq_pending [7], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14134 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [6], Q = \irq_pending [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14133 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [5], Q = \irq_pending [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14132 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [4], Q = \irq_pending [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14131 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [3], Q = \irq_pending [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14129 ($_DFF_P_) from module picorv32a (D = $procmux$998.Y, Q = \irq_pending [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$14128 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [0], Q = \irq_pending [0], rval = 1'0).

5.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 71 unused cells and 7 unused wires.
<suppressed ~72 debug messages>

5.22.10. Rerunning OPT passes. (Removed registers in this run.)

5.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.22.13. Executing OPT_DFF pass (perform DFF optimizations).

5.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

5.22.15. Finished fast OPT passes.

5.23. Executing ABC pass (technology mapping using ABC).

5.23.1. Extracting gate netlist of module `\picorv32a' to `<abc-temp-dir>/input.blif'..
Extracted 14818 gates and 16387 wires to a netlist network with 1566 inputs and 920 outputs.

5.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     1159
ABC RESULTS:            ANDNOT cells:     4010
ABC RESULTS:               MUX cells:     1886
ABC RESULTS:              NAND cells:      896
ABC RESULTS:               NOR cells:      577
ABC RESULTS:               NOT cells:      984
ABC RESULTS:                OR cells:     2392
ABC RESULTS:             ORNOT cells:      244
ABC RESULTS:              XNOR cells:      615
ABC RESULTS:               XOR cells:     2462
ABC RESULTS:        internal signals:    13901
ABC RESULTS:           input signals:     1566
ABC RESULTS:          output signals:      920
Removing temp directory.

5.24. Executing OPT pass (performing simple optimizations).

5.24.1. Executing OPT_EXPR pass (perform const folding).
